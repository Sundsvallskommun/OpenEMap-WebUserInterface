Ext.define("OpenEMap.action.Action",{extend:GeoExt.Action,constructor:function(a){var b=a.mapPanel.map;if(a.minScale||a.maxScale)a.minScale||(a.minScale=0),a.maxScale||(a.maxScale=99999999999999),b.events.register("zoomend",this,function(){b.getScale()>=a.maxScale||b.getScale()<=a.minScale?this.disable():this.enable()});this.callParent(arguments)},toggle:function(){}});
Ext.define("OpenEMap.action.DeleteAllFeatures",{extend:OpenEMap.action.Action,constructor:function(a){a.control=new OpenLayers.Control.Button({trigger:function(){a.mapPanel.measureLayer.removeAllFeatures();a.mapPanel.measureLayerSegmentsLayer.removeAllFeatures();a.mapPanel.map.layers.forEach(function(a){a instanceof OpenLayers.Layer.Vector&&a.removeAllFeatures()})}});a.iconCls=a.iconCls||"action-deleteallfeatures";a.tooltip=a.tooltip||"Rensa kartan fr\x26aring;n ritade objekt.";this.callParent(arguments)}});
Ext.define("OpenEMap.action.DeleteGeometry",{extend:OpenEMap.action.Action,constructor:function(a){var b=a.mapPanel,c=b.drawLayer;a.handler=function(){c.selectedFeatures.forEach(function(a){b.map.controls.forEach(function(b){"OpenLayers.Control.ModifyFeature"==b.CLASS_NAME&&b.active&&b.unselectFeature(a)});c.destroyFeatures([a])})};a.iconCls=a.iconCls||"action-deletegeometry";a.tooltip=a.tooltip||"Ta bort ritat objekt";this.callParent(arguments)}});
Ext.define("OpenEMap.action.DeleteMeasure",{extend:OpenEMap.action.Action,constructor:function(a){a.control=new OpenLayers.Control.Button({trigger:function(){a.mapPanel.measureLayer.removeAllFeatures();a.mapPanel.measureLayerArea.removeAllFeatures();a.mapPanel.measureLayerLength.removeAllFeatures();a.mapPanel.measureLayerSegments.removeAllFeatures();a.mapPanel.map.controls.forEach(function(a){a instanceof OpenLayers.Control.DynamicMeasure&&a.deactivate()})}});a.iconCls=a.iconCls||"action-deletegeometry";
a.tooltip=a.tooltip||"Ta bort m\x26auml;tning(ar).";this.callParent(arguments)}});
Ext.define("OpenEMap.view.DetailReportResults",{extend:Ext.view.View,autoScroll:!0,padding:5,geometry:null,initComponent:function(){this.store=Ext.create("GeoExt.data.FeatureStore",{features:[],fields:"COUNT CATEGORY CLARIFICAT DESCRIPTIO REMARK MAPTEXT MAX MIN HEIGHT".split(" ")});this.tpl=new Ext.XTemplate("\x3ch3\x3e"+this.fbet+"\x3c/h3\x3e","\x3ch4\x3e"+this.aktbet+"\x3c/h4\x3e",'\x3ctpl for\x3d"."\x3e','\x3cdiv style\x3d"margin-bottom: 10px;" class\x3d"thumb-wrap"\x3e',"\x3ch4\x3e{COUNT}. {DESCRIPTIO}\x3c/h4\x3e",
"\x3cp\x3e{REMARK}\x3c/p\x3e","\x3c/div\x3e","\x3c/tpl\x3e");this.itemSelector="div.thumb-wrap";this.callParent(arguments);this.doSearch()},doSearch:function(){var a=this.store,b=this.layer,c=this.geometry;b.destroyFeatures();var d=Ext.apply({url:"wfs",version:"1.1.0",srsName:"EPSG:3006",featureType:"EgenskapsBestammelser_yta",featurePrefix:"RIGES"});(new OpenLayers.Protocol.WFS(d)).read({filter:new OpenLayers.Filter({type:OpenLayers.Filter.Spatial.INTERSECTS,value:c}),callback:function(c){if(c=c.features)c.forEach(function(b){b.attributes.COUNT=
a.getCount()+1;a.addFeatures([b])}),b.addFeatures(c)}})},onSelect:function(a,b){var c={},d=b.raw.feature,e=b.raw.layer,f=function(a){e.metadata.attributes[a]&&(c[e.metadata.attributes[a].alias||a]=d.attributes[a])};d&&(e.metadata&&e.metadata.attributes?Object.keys(d.attributes).forEach(f):c=d.attributes,this.mapPanel.searchLayer.selectedFeatures.forEach(function(a){this.mapPanel.selectControl.unselect(a)},this),b.raw.feature.layer&&this.mapPanel.selectControl.select(d))}});
Ext.define("OpenEMap.action.DetailReport",{extend:OpenEMap.action.Action,constructor:function(a){var b=a.mapPanel,c=b.searchLayer,d=a.map,e=OpenLayers.Class(OpenLayers.Control,{initialize:function(a){OpenLayers.Control.prototype.initialize.apply(this,arguments);this.handler=new OpenLayers.Handler.Click(this,{click:this.onClick},this.handlerOptions)},onClick:function(a){b.setLoading(!0);c.destroyFeatures();var e=d.getLonLatFromPixel(a.xy);a=e.lon;var e=e.lat,h=new OpenLayers.Geometry.Point(a,e),h=
new OpenLayers.Feature.Vector(h);c.addFeatures([h]);OpenEMap.requestLM({url:"enhetsomraden?x\x3d"+a+"\x26y\x3d"+e,success:function(a){a=(new OpenLayers.Format.GeoJSON).read(a.responseText);c.addFeatures(a);var e=c.getDataExtent();d.zoomToExtent(e);var e=a[0].geometry,f=a[0].attributes.name;a=Ext.apply({url:"wfs",version:"1.1.0",srsName:"EPSG:3006",featureType:"DetaljplanGallande_yta",featurePrefix:"RIGES"});(new OpenLayers.Protocol.WFS(a)).read({filter:new OpenLayers.Filter({type:OpenLayers.Filter.Spatial.INTERSECTS,
value:e}),callback:function(a){if((a=a.features)&&0<a.length)c.addFeatures(a),a=Ext.create("OpenEMap.view.DetailReportResults",{mapPanel:b,fbet:f,aktbet:a[0].attributes.AKTBET,geometry:a[0].geometry,layer:b.drawLayer}),Ext.create("GeoExt.window.Popup",{title:"Rapport",anchored:!1,unpinnable:!1,draggable:!0,map:b,maximizable:!1,minimizable:!1,resizable:!0,width:300,height:400,layout:"fit",items:a,collapsible:!1}).show()}})},scope:this,callback:function(){b.setLoading(!1)}})}});a.control=new e({type:OpenLayers.Control.TYPE_TOGGLE});
a.iconCls=a.iconCls||"action-detailreport";a.tooltip=a.tooltip||"Detaljerad rapport";a.toggleGroup="extraTools";this.callParent(arguments)}});
Ext.define("OpenEMap.action.DrawGeometry",{extend:OpenEMap.action.Action,isText:function(a){return a&&("Point"===a.geometry||a.geometry instanceof OpenLayers.Geometry.Point)?a.attributes&&a.attributes.type&&"label"===a.attributes.type:!1},constructor:function(a){var b=a.mapPanel.drawLayer;a.attributes=a.attributes||{};a.geometry=a.geometry||"Polygon";var c=OpenLayers.Class(OpenLayers.Control.DrawFeature,{drawFeature:function(b){b=new OpenLayers.Feature.Vector(b,a.attributes,a.style);!1!==this.layer.events.triggerEvent("sketchcomplete",
{feature:b})&&(b.state=OpenLayers.State.INSERT,this.layer.addFeatures([b]),this.featureAdded(b),this.events.triggerEvent("featureadded",{feature:b}))}});a.control=new c(b,OpenLayers.Handler[a.geometry]);b.events.register("beforefeatureadded",this,function(a){this.isText(a.feature)&&Ext.Msg.prompt("Text","Mata in text:",function(c,f){"ok"==c&&(a.feature.attributes.label=f,a.feature.data.label=f,b.redraw())})});a.iconCls=a.iconCls||"action-drawgeometry";a.tooltip||(a.tooltip="Polygon"===a.geometry?
"Rita omr\u00e5de":"Path"===a.geometry?"Rita linje":"Point"===a.geometry?"Rita punkt":"Rita geometri",this.isText(a)&&(a.tooltip="Placera ut text."));a.toggleGroup="extraTools";this.callParent(arguments)}});
Ext.define("OpenEMap.ObjectFactory",{toPoint:function(a){return new OpenLayers.Geometry.Point(a[0],a[1])},createR:function(a){var b=a.x,c=a.y,d=a.l;a=a.w;b=new OpenLayers.Geometry.LinearRing([[b,c],[b,c-d],[b+a,c-d],[b+a,c]].map(this.toPoint));return new OpenLayers.Geometry.Polygon([b])},createL:function(a){var b=a.x,c=a.y,d=a.l,e=a.w,f=a.m1;a=a.m2;b=new OpenLayers.Geometry.LinearRing([[b,c],[b,c-e],[b+f,c-e],[b+f,c-a],[b+d,c-a],[b+d,c]].map(this.toPoint));return new OpenLayers.Geometry.Polygon([b])},
createD:function(a){var b=a.x,c=a.y,d=a.l,e=a.w;a=(d-a.m1)/2;b=new OpenLayers.Geometry.LinearRing([[b,c],[b,c-e+a],[b+a,c-e],[b+d-a,c-e],[b+d,c-e+a],[b+d,c]].map(this.toPoint));return new OpenLayers.Geometry.Polygon([b])},createO:function(a){var b=a.x,c=a.y;a=a.m1/2*Math.sqrt(4+2*Math.SQRT2);b=new OpenLayers.Geometry.Point(b+a,c-a);return OpenLayers.Geometry.Polygon.createRegularPolygon(b,a,8)},figurHooks:function(a){var b=a.geometry.move;a.geometry.move=function(c,e){a.attributes.config.x+=c;a.attributes.config.y+=
e;b.apply(a.geometry,arguments)};var c=a.geometry.rotate;a.geometry.rotate=function(b,e){a.attributes.config.angle+=b;c.apply(a.geometry,arguments)}},create:function(a,b,c){var d;d="R"==a.type?this.createR(a):"L"==a.type?this.createL(a):"D"==a.type?this.createD(a):this.createO(a);var e=d.getCentroid(),e=new OpenLayers.Geometry.Point(e.x,e.y);d.rotate(a.angle,e);b=new OpenLayers.Feature.Vector(d,b,c);this.figurHooks(b);b.attributes.config=a;return b}});
Ext.define("OpenEMap.view.ObjectConfig",{extend:Ext.form.Panel,statics:{config:{type:"R",w:10,l:10,m1:2,m2:2,angle:0}},fieldDefaults:{labelWidth:60},autoHeight:!0,width:400,border:!1,selectedFeature:void 0,layer:void 0,factory:void 0,hidden:!0,defaults:{border:!1},typeLabel:"Type",widthLabel:"Width",lengthLabel:"Length",m1Label:"M1",m2Label:"M2",angleLabel:"Angle",initComponent:function(){this.layer=this.mapPanel.drawLayer;this.factory=Ext.create("OpenEMap.ObjectFactory");var a=[];a.push({xtype:"radiogroup",
vertical:!0,fieldLabel:this.typeLabel,itemId:"type",hidden:!0,items:[{boxLabel:'\x3cdiv class\x3d"objectconfig-radio-r"\x3e\x3c/div\x3e',name:"rb",inputValue:"R",checked:!0},{boxLabel:'\x3cdiv class\x3d"objectconfig-radio-l"\x3e\x3c/div\x3e',name:"rb",enabled:!1,inputValue:"L"},{boxLabel:'\x3cdiv class\x3d"objectconfig-radio-d"\x3e\x3c/div\x3e',name:"rb",enabled:!1,inputValue:"D"},{boxLabel:'\x3cdiv class\x3d"objectconfig-radio-o"\x3e\x3c/div\x3e',name:"rb",enabled:!1,inputValue:"O"}],listeners:{change:function(a,
c){this.config.type=c.rb;this.updateHelpImage(this.config.type);this.setFormItemVisibility(this.config.type);this.createObject()},scope:this}});a=a.concat([{xtype:"numberfield",fieldLabel:this.widthLabel,itemId:"w",minValue:0,listeners:{change:function(a,c){this.config.w=c;this.createObject()},scope:this}},{xtype:"numberfield",fieldLabel:this.lengthLabel,itemId:"l",minValue:0,listeners:{change:function(a,c){this.config.l=c;this.createObject()},scope:this}},{xtype:"numberfield",fieldLabel:this.m1Label,
itemId:"m1",minValue:0,listeners:{change:function(a,c){this.config.m1=c;this.createObject()},scope:this}},{xtype:"numberfield",fieldLabel:this.m2Label,itemId:"m2",minValue:0,listeners:{change:function(a,c){this.config.m2=c;this.createObject()},scope:this}},{xtype:"numberfield",itemId:"angle",fieldLabel:this.angleLabel,value:0,listeners:{change:function(a,c){this.config.angle=c;this.createObject()},scope:this}}]);this.attributeFields=Ext.create("Ext.container.Container",{title:"Attributes"});a.push(this.attributeFields);
this.items=[{layout:"column",defaults:{border:!1},padding:5,items:[{width:180,layout:"form",items:a},{columnWidth:1,padding:5,items:{itemId:"objectimage",border:!1,height:200}}]}];this.layer.events.register("featuremodified",this,this.onFeaturemodified);this.layer.events.register("beforefeatureselected",this,this.onBeforefeatureselected);this.layer.events.register("featureunselected",this,this.onFeatureunselected);this.callParent(arguments)},setConfig:function(a){void 0===a?(this.config=Ext.clone(OpenEMap.view.ObjectConfig.config),
this.down("#type").show()):a.type?(this.config=Ext.clone(a),Ext.applyIf(this.config,OpenEMap.view.ObjectConfig.config),this.down("#type").hide()):(this.config=Ext.clone(a),Ext.applyIf(this.config,OpenEMap.view.ObjectConfig.config),this.down("#type").show());this.setFormValues();this.show();return this.config},setFormValues:function(){this.config?(this.down("#type").setValue({rb:this.config.type}),this.updateHelpImage(this.config.type),this.down("#w").setRawValue(this.config.w),this.down("#l").setRawValue(this.config.l),
this.down("#m1").setRawValue(this.config.m1),this.down("#m2").setRawValue(this.config.m2),this.down("#angle").setRawValue(this.config.angle),this.setFormItemVisibility(this.config.type),this.down("#angle").show()):(this.down("#type").hide(),this.down("#w").hide(),this.down("#l").hide(),this.down("#m1").hide(),this.down("#m2").hide(),this.down("#angle").hide(),this.down("#objectimage").hide());this.attributeFields.removeAll();this.selectedFeature&&Object.keys(this.selectedFeature.attributes).forEach(function(a){this.createAttributeField(this.selectedFeature,
a)},this);this.doLayout()},createAttributeField:function(a,b){if(!("config"==b||"metadata"==b)){var c=a.attributes.metadata;(!c||!c[b]||!c[b].hidden)&&this.attributeFields.add({xtype:"textfield",fieldLabel:b,value:a.attributes[b],listeners:{change:function(a,c){this.selectedFeature.attributes[b]=c;this.layer.drawFeature(this.selectedFeature)},scope:this}})}},setFormItemVisibility:function(a){"R"==a?(this.down("#w").show(),this.down("#l").show(),this.down("#m1").hide(),this.down("#m2").hide()):"L"==
a?(this.down("#w").show(),this.down("#l").show(),this.down("#m1").show(),this.down("#m2").show()):"D"==a?(this.down("#w").show(),this.down("#l").show(),this.down("#m1").show(),this.down("#m2").hide()):"O"==a&&(this.down("#w").hide(),this.down("#l").hide(),this.down("#m1").show(),this.down("#m2").hide())},onFeaturemodified:function(a){(config=a.feature.attributes.config)&&this.down("#angle").setRawValue(config.angle)},onBeforefeatureselected:function(a){this.selectedFeature=a=a.feature;this.config=
a.attributes.config;if((a=this.gui.activeAction)&&a.control instanceof OpenLayers.Control.ModifyFeature)a.control.mode=this.config&&a.control._mode&OpenLayers.Control.ModifyFeature.RESHAPE?a.control._mode^OpenLayers.Control.ModifyFeature.RESHAPE:a.control._mode,a.control.resetVertices();this.show();this.setFormValues()},onFeatureunselected:function(){0===this.layer.selectedFeatures.length&&this.hide();this.selectedFeature=void 0},createObject:function(a,b,c){this.selectedFeature&&this.selectedFeature.attributes.config&&
(a=this.factory.create(this.config,c).geometry,this.selectedFeature.geometry.removeComponent(this.selectedFeature.geometry.components[0]),this.selectedFeature.geometry.addComponent(a.components[0]),this.selectedFeature.modified=!0,this.selectedFeature.geometry.calculateBounds(),this.mapPanel.map.controls.forEach(function(a){"OpenLayers.Control.ModifyFeature"==a.CLASS_NAME&&a.active&&a.resetVertices()}),this.layer.drawFeature(this.selectedFeature),this.layer.events.triggerEvent("featuremodified",{feature:this.selectedFeature}))},
updateHelpImage:function(a){a="figur-"+a+"-help.png";this.down("#objectimage").show();this.down("#objectimage").update('\x3cimg src\x3d"'+OpenEMap.basePathImages+a+'"\x3e\x3c/img\x3e')}});
Ext.define("OpenEMap.action.DrawObject",{extend:OpenEMap.action.Action,constructor:function(a){this.mapPanel=a.mapPanel;this.layer=this.mapPanel.drawLayer;this.style=a.style;this.attributes=a.attributes;this.objectConfig=a.objectConfig;this.objectConfigView=a.objectConfigView;this.factory=Ext.create("OpenEMap.ObjectFactory");this.attributes=this.attributes||{};var b=OpenLayers.Class(OpenLayers.Control,{initialize:function(a){OpenLayers.Control.prototype.initialize.apply(this,arguments);this.handler=
new OpenLayers.Handler.Click(this,{click:this.onClick},this.handlerOptions)},onClick:Ext.bind(this.onClick,this)});a.control=new b({type:OpenLayers.Control.TYPE_TOGGLE});a.iconCls=a.iconCls||"action-drawobject";a.tooltip=a.tooltip||"Rita f\x26ouml;rdefinierad form.";a.toggleGroup="extraTools";this.callParent(arguments)},onClick:function(a){a=this.mapPanel.map.getLonLatFromPixel(a.xy);var b=this.objectConfigView?this.objectConfigView.config:OpenEMap.view.ObjectConfig.config,b=Ext.clone(b);b.x=a.lon;
b.y=a.lat;a=this.factory.create(b,this.attributes,this.style);this.mapPanel.unselectAll();this.layer.addFeatures([a]);this.mapPanel.selectControl.select(a)},toggle:function(a){a&&this.objectConfigView.setConfig(this.objectConfig)}});Ext.define("OpenEMap.action.FullExtent",{extend:OpenEMap.action.Action,constructor:function(a){a.control=new OpenLayers.Control.ZoomToMaxExtent;a.iconCls=a.iconCls||"action-fullextent";a.tooltip=a.tooltip||"Zooma till full utberedning";this.callParent(arguments)}});
Ext.define("OpenEMap.view.IdentifyResults",{extend:Ext.panel.Panel,autoScroll:!0,layout:{type:"vbox",pack:"start",align:"stretch",resizable:!0},initComponent:function(){var a=Ext.create("Ext.data.TreeStore",{root:{expanded:!0}});this.root=a.getRootNode();var b=Ext.create("Ext.grid.property.Grid",{flex:2,autoScroll:!0,title:"Egenskaper",collapsible:!0,collapsed:!1,xtype:"propertygrid",stripeRows:!0,clicksToEdit:100});this.items=[{xtype:"treepanel",flex:1,rootVisible:!1,store:a,minHeight:200,listeners:{select:this.onSelect,
scope:this}},b];this.callParent(arguments)},onSelect:function(a,b){var c={},d=b.raw.feature,e=b.raw.layer,f=function(a){e.metadata.attributes[a]&&(c[e.metadata.attributes[a].alias||a]=d.attributes[a])};d&&(e.metadata&&e.metadata.attributes?Object.keys(d.attributes).forEach(f):c=d.attributes,this.mapPanel.searchLayer.selectedFeatures.forEach(function(a){this.mapPanel.selectControl.unselect(a)},this),b.raw.feature.layer&&this.mapPanel.selectControl.select(d));var c=Ext.clone(c),g=Ext.clone(c);Object.keys(c).forEach(function(a){var b=
g[a],b=b?b:"";b.match("http://")||b.match("//")||b.match("https://")?(c[a]='\x3ca href\x3d"'+b+'" target\x3d"_blank"\x3eL\u00e4nk\x3c/a\x3e',g[a]={renderer:function(a){return a},editor:Ext.create("Ext.form.DisplayField")}):g[a]={editor:Ext.create("Ext.form.DisplayField")}});this.down("propertygrid").setSource(c,g)},addResult:function(a,b){var c=this.root.appendChild({text:b.name,leaf:!1,expanded:!0});a.forEach(function(a){c.appendChild({text:a.attributes[Object.keys(a.attributes)[0]],leaf:!0,feature:a,
layer:b})})}});
Ext.define("OpenEMap.action.Identify",{extend:OpenEMap.action.Action,popup:null,getPopup:function(a){this.popup&&this.popup.destroy();return this.popup=Ext.create("GeoExt.window.Popup",{title:"S\u00f6kresultat",location:a.feature,anchored:!1,unpinnable:!1,draggable:!0,map:a.mapPanel,maximizable:!1,minimizable:!1,resizable:!0,width:300,height:400,layout:"fit",items:a.items,collapsible:!1,x:200,y:100,listeners:{close:function(){a.mapPanel.searchLayer.removeAllFeatures()}}})},constructor:function(a){var b=this,
c=a.mapPanel,d=c.searchLayer,e=a.map,f=a.client;null===a.useRegisterenhet&&(a.useRegisterenhet=!0);a.tolerance=a.tolerance||3;null===a.onlyVisibleLayers&&(a.onlyVisibleLayers=!0);var g=OpenLayers.Class(OpenLayers.Control,{initialize:function(a){OpenLayers.Control.prototype.initialize.apply(this,arguments);this.handler=new OpenLayers.Handler.Click(this,{click:this.onClick},this.handlerOptions)},onClick:function(h){c.setLoading(!0);d.destroyFeatures();var g=e.getLonLatFromPixel(h.xy),j=g.lon,g=g.lat,
l={},m={};m.x=h.xy.x+a.tolerance;l.x=h.xy.x-a.tolerance;m.y=h.xy.y+a.tolerance;l.y=h.xy.y-a.tolerance;var l=e.getLonLatFromPixel(l),m=e.getLonLatFromPixel(m),n=new OpenLayers.Geometry.Point(j,g),p=new OpenLayers.Bounds;p.extend(l);p.extend(m);m=new OpenLayers.Feature.Vector(n);d.addFeatures([m]);var q=Ext.create("OpenEMap.view.IdentifyResults",{mapPanel:c});b.getPopup({mapPanel:c,location:m,items:q}).show();a.useRegisterenhet&&OpenEMap.requestLM({url:"registerenheter?x\x3d"+j+"\x26y\x3d"+g,success:function(a){a=
Ext.decode(a.responseText);a=new OpenLayers.Feature.Vector(n,{name:a.name});q.addResult([a],{name:"Fastigheter"})},failure:function(a){Ext.Msg.alert("Fel i fastighetstj\u00e4nsten","Kontakta systemadministrat\u00f6r\x3cbr\x3eFelkod: "+a.status+" "+a.statusText)}});j=Ext.create("OpenEMap.config.Parser");g=f.getConfig(!0).layers;g=j.extractPlainLayers(g);g=j.extractClickableLayers(g);a.onlyVisibleLayers&&(g=j.extractVisibleLayers(g));OpenLayers.ProxyHost=OpenEMap.basePathProxy;j.extractWFS(g).forEach(function(a){a.wfs.url=
a.wfs.url;var b=Ext.apply({version:"1.1.0",srsName:e.projection},a.wfs);(new OpenLayers.Protocol.WFS(b)).read({filter:new OpenLayers.Filter({type:OpenLayers.Filter.Spatial.BBOX,value:p}),callback:function(b){if((b=b.features)&&0<b.length)q.addResult(b,a),d.addFeatures(b)}})});j.extractWMS(j.extractNoWFS(g)).forEach(function(a){var b=function(b){if((b=b.features)&&0<b.length)q.addResult(b,a),d.addFeatures(b)},c=new OpenLayers.Control.WMSGetFeatureInfo({url:a.layer.url,layers:[a.layer],infoFormat:"application/vnd.ogc.gml",
clickCallback:b});c.setMap(e);c.events.register("getfeatureinfo",c,b);c.getInfoForClick(h,{proxy:OpenEMap.basePathProxy})});c.setLoading(!1)}});a.control=new g({type:OpenLayers.Control.TYPE_TOGGLE});a.iconCls=a.iconCls||"action-identify";a.tooltip=a.tooltip||"Identifiera";a.toggleGroup="extraTools";this.callParent(arguments)}});
Ext.define("OpenEMap.action.MeasureArea",{extend:OpenEMap.action.Action,constructor:function(a){var b=a.mapPanel;null===a.accuracy&&(a.accuracy=2);a.control=new OpenLayers.Control.DynamicMeasure(OpenLayers.Handler.Polygon,{mapPanel:b,accuracy:a.accuracy});a.iconCls=a.iconCls||"action-measurearea";a.tooltip=a.tooltip||"M\x26auml;t area";a.toggleGroup="extraTools";this.callParent(arguments)}});
Ext.define("OpenEMap.action.MeasureLine",{extend:OpenEMap.action.Action,constructor:function(a){var b=a.mapPanel;null===a.accuracy&&(a.accuracy=2);a.control=new OpenLayers.Control.DynamicMeasure(OpenLayers.Handler.Path,{maxSegments:null,accuracy:a.accuracy,mapPanel:b});a.iconCls=a.iconCls||"action-measureline";a.tooltip=a.tooltip||"M\u00e4t str\x26auml;cka";a.toggleGroup="extraTools";this.callParent(arguments)}});
Ext.define("OpenEMap.action.MetadataInfoColumn",{extend:Ext.grid.column.Action,requrires:["Ext.tip.ToolTip","OpenEMap.data.DataHandler","OpenEMap.view.MetadataWindow"],text:"",width:22,menuDisabled:!0,align:"center",iconCls:"action-identify",initComponent:function(a){var b=this;this.tip=Ext.create("Ext.tip.ToolTip",{trackMouse:!0});this.listeners={mouseover:function(a,d,e,f,g,h){b.tip.setTarget(g.target);b.dataHandler&&b.dataHandler.getMetadataAbstract(b.getUUIDFromMetadataUrl(h.get("urlToMetadata")),
function(a){a["abstract"]&&b.updateTooltip(a["abstract"])})},mouseout:function(){b.tip.update(null);b.tip.hide()},click:function(a,d,e,f,g,h){b.metadataWindow&&(b.tip.update(null),b.metadataWindow.showMetadata(b.getUUIDFromMetadataUrl(h.get("urlToMetadata"))))}};this.callParent(arguments)},updateTooltip:function(a){a&&(this.tip.update(a.substr(0,180)+"..."),this.tip.show())},getUUIDFromMetadataUrl:function(a){if(a){var b=a.indexOf("id\x3d");if(0<b)return a.substr(b+3,36)}return a}});
Ext.define("OpenEMap.action.ModifyGeometry",{extend:OpenEMap.action.Action,constructor:function(a){var b=a.mapPanel.drawLayer;void 0===a.drag&&(a.drag=!0);void 0===a.rotate&&(a.rotate=!0);void 0===a.reshape&&(a.reshape=!0);var c=0;a.drag&&(c|=OpenLayers.Control.ModifyFeature.DRAG);a.rotate&&(c|=OpenLayers.Control.ModifyFeature.ROTATE);a.resize&&(c|=OpenLayers.Control.ModifyFeature.RESIZE);a.reshape&&(c|=OpenLayers.Control.ModifyFeature.RESHAPE);c=Ext.apply({mode:c},a.options);a.control=new OpenLayers.Control.ModifyFeature(b,
c);a.control._mode=a.control.mode;a.iconCls=a.iconCls||"action-modifygeometry";a.tooltip=a.tooltip||"\x26Auml;ndra ritat objekt";a.toggleGroup="extraTools";this.callParent(arguments)}});
Ext.define("OpenEMap.action.ModifyText",{extend:OpenEMap.action.Action,constructor:function(a){var b=a.mapPanel.drawLayer;a.attributes=a.attributes||{};a.control=a.mapPanel.selectControl;a.control.events.register("deactivate",this,function(){console.log("deactivate")});a.control.events.register("activate",this,function(){b.events.register("featureselected",this,function(a){Ext.Msg.prompt("Text","Mata in text:",function(d,e){"ok"==d&&(a.feature.attributes.label=e,a.feature.data.label=e,b.redraw())})})});
a.control.events.register("deactivate",this,function(){b.events.unregister("featureselected")});a.iconCls=a.iconCls||"action-selectgeometry";a.tooltip=a.tooltip||"\x26Auml;ndra text";a.toggleGroup="extraTools";this.callParent(arguments)}});
Ext.define("OpenEMap.view.PopupResults",{extend:GeoExt.window.Popup,autoScroll:!0,layout:{type:"vbox",pack:"start",align:"stretch"},popup:null,constructor:function(a){this.popup&&this.popup.destroy();return this.popup=Ext.create("GeoExt.window.Popup",{ancCls:"oep-popup-anc",popupCls:"oep-popup",bodyCls:"oep-popup-body",anchored:!0,anchorPosition:"bottom-left",animCollapse:!0,collapsible:!1,draggable:!1,feature:a.feature,html:a.popupText,icon:a.icon,layout:"fit",location:a.location,map:a.mapPanel,
maxWidth:300,maximizable:!1,minimizable:!1,resizable:!1,title:a.title,unpinnable:!1,listeners:{beforeclose:function(){this&&this.destroy();this.feature.renderIntent="default";this.feature.layer.drawFeature(this.feature);map.events.triggerEvent("popupfeatureunselected",{layer:this.feature.layer,featureid:this.feature.attributes[this.feature.layer.idAttribute]})}}})}});
Ext.define("OpenEMap.action.Popup",{extend:OpenEMap.action.Action,popup:null,map:null,constructor:function(a){map=a.map;var b=a.mapPanel,c=a.layers;a.popup=null;a.tolerance=a.tolerance||3;var d=OpenLayers.Class(OpenLayers.Control,{initialize:function(a){OpenLayers.Control.prototype.initialize.apply(this,arguments);this.handler=new OpenLayers.Handler.Click(this,{click:this.onClick},this.handlerOptions)},onClick:function(d){var f=map.getLonLatFromPixel(d.xy);c=map.layers;var f=new OpenLayers.Geometry.Point(f.lon,
f.lat),g=new OpenLayers.Feature.Vector(f),h={},f={};f.x=d.xy.x+a.tolerance;h.x=d.xy.x-a.tolerance;f.y=d.xy.y+a.tolerance;h.y=d.xy.y-a.tolerance;d=map.getLonLatFromPixel(h);var f=map.getLonLatFromPixel(f),k=new OpenLayers.Bounds;k.extend(d);k.extend(f);d=Ext.create("OpenEMap.config.Parser").extractPopupLayers(c);for(var j=!1,f=function(c){c.popup&&(c.popup.forEach(function(a){a.destroy()}),c.popup=[]);for(var d=0,e=!1;d<c.features.length&&(!e||!a.showOnlyFirstHit);){e=c.features[d];if(e.geometry.intersects(k.toGeometry())){var f=
c.popupTextPrefix+e.attributes[c.popupTextAttribute]+c.popupTextSuffix,h="";c.popupTitleAttribute&&(h=e.attributes[c.popupTitleAttribute]);1==e.geometry.getVertices().length&&(g=e.clone());f=new OpenEMap.view.PopupResults({mapPanel:b,location:g,popupText:f,feature:e,title:h});f.show();c.popup.push(f);e.renderIntent="select";e.layer.drawFeature(e);map.events.triggerEvent("popupfeatureselected",{layer:c,featureid:e.attributes[c.idAttribute]});e=!0}else"select"==e.renderIntent&&(e.renderIntent="default",
e.layer.drawFeature(e),map.events.triggerEvent("popupfeatureunselected",{layer:c,featureid:e.attributes[c.idAttribute]})),e=!1;d++}return j},h=0;h<d.length&&(!j||!a.showOnlyFirstHit);)j=f(d[h]),h++}});a.control=new d({type:OpenLayers.Control.TYPE_TOGGLE});a.iconCls=a.iconCls||"action-popup";a.tooltip=a.tooltip||"Popup";a.toggleGroup="extraTools";this.callParent(arguments)},destroy:function(){this.popup&&this.popup.destroy();this.destroyPopupLayers()}});
Ext.define("OpenEMap.action.Print",{extend:OpenEMap.action.Action,require:"GeoExt.plugins.PrintExtent",constructor:function(a){var b=a.mapPanel.plugins[0],c=b.printProvider;c.customParams={attribution:a.mapPanel.config.attribution.trim(),mapTitle:""};var d=null,e=null,f=function(){d.down("#scale").select(e.scale)},g=function(){d&&d.setLoading(!1)},h=function(a,b){d&&d.setLoading(!1);Ext.Msg.show({title:"Felmeddelande",msg:"Print failed.\n\n"+b.responseText,icon:Ext.Msg.ERROR})},k=function(){c.un("beforedownload",
g);c.on("printexception",h);b.control.events.unregister("transformcomplete",null,f);b.removePage(e);b.hide();d=null;j.deactivate()};a.iconCls=a.iconCls||"action-print";a.tooltip=a.tooltip||"Skriv ut";a.toggleGroup="extraTools";var j=new (OpenLayers.Class(OpenLayers.Control,{initialize:function(a){OpenLayers.Control.prototype.initialize.apply(this,arguments)},type:OpenLayers.Control.TYPE_TOGGLE,activate:function(){if(!d){b.hide();b.show();e=b.addPage();c.dpis.data.items.forEach(function(a){"56"===
a.data.name?a.data.name="L\u00e5g ("+a.data.name+" dpi)":"127"===a.data.name?a.data.name="Medel ("+a.data.name+" dpi)":"254"===a.data.name&&(a.data.name="H\u00f6g ("+a.data.name+" dpi)")});c.layouts.data.items.forEach(function(a){/landscape$/.test(a.data.name)?a.data.displayName=a.data.name.replace("landscape","liggande"):/portrait$/.test(a.data.name)&&(a.data.displayName=a.data.name.replace("portrait","st\u00e5ende"))});d=new Ext.Window({autoHeight:!0,width:290,resizable:!1,layout:"fit",bodyPadding:"5 5 0",
title:"Utskriftsinst\x26auml;llningar",listeners:{close:k},items:[{xtype:"form",layout:"anchor",defaults:{anchor:"100%"},fieldDefaults:{labelWidth:120},items:[{xtype:"textfield",fieldLabel:"Rubrik",valueField:"mapTitle",itemId:"mapTitle",queryMode:"local",value:c.customParams.mapTitle,listeners:{change:function(a){c.customParams.mapTitle=a.value}}},{xtype:"combo",fieldLabel:"Pappersformat",store:c.layouts,displayField:"displayName",valueField:"name",itemId:"printLayouts",queryMode:"local",value:c.layouts.getAt(0).get("name"),
listeners:{select:function(a,b){c.setLayout(b[0])}}},{xtype:"combo",fieldLabel:"Kvalit\u00e9",store:c.dpis,displayField:"name",valueField:"value",queryMode:"local",value:c.dpis.first().get("value"),listeners:{select:function(a,b){c.setDpi(b[0])}}},{xtype:"combo",fieldLabel:"Skala",store:c.scales,displayField:"name",valueField:"value",queryMode:"local",itemId:"scale",value:c.scales.first().get("value"),listeners:{select:function(a,b){e.setScale(b[0],"m")}}}]}],bbar:["-\x3e",{text:"Skriv ut",handler:function(){d.setLoading(!0);
b.print()}}]});d.show();d.down("#scale").select(e.scale);var a=d.down("#printLayouts");a.select(a.store.data.get(6));c.setLayout(a.store.data.items[6]);b.control.events.register("transformcomplete",null,f);b.control.events.register("transformcomplete",null,f);c.on("beforedownload",g);c.on("printexception",h);OpenLayers.Control.prototype.activate.apply(this,arguments)}},deactivate:function(){d&&d.close();OpenLayers.Control.prototype.deactivate.apply(this,arguments)}}))({type:OpenLayers.Control.TYPE_TOGGLE});
a.control=j;this.callParent(arguments)}});Ext.define("OpenEMap.action.SelectGeometry",{extend:OpenEMap.action.Action,constructor:function(a){a.control=a.mapPanel.selectControl;a.iconCls=a.iconCls||"action-selectgeometry";a.tooltip=a.tooltip||"V\x26auml;lj ritat objekt";a.toggleGroup="extraTools";this.callParent(arguments)}});
Ext.define("OpenEMap.view.BaseLayers",{extend:Ext.toolbar.Toolbar,border:!1,cls:"oep-map-tools",constructor:function(a){var b=a.mapPanel,c=b.map,d=b.map.layers.filter(function(a){return a.isBaseLayer});this.items=d.map(function(a){var b;a==d[d.length-1]&&(b="oep-tools-last");return Ext.create("Ext.Button",{text:a.name,toggleGroup:"baseLayers",allowDepress:!1,layer:a,pressed:a.visibility,cls:b,listeners:{toggle:function(b,d){d&&c.setBaseLayer(a)}}})});c.events.register("changebaselayer",this,this.onChangeBaseLayer);
this.callParent(arguments)},onChangeBaseLayer:function(a){this.items.each(function(b){b.toggle(b.layer==a.layer,!0)})}});
Ext.define("OpenEMap.view.Map",{extend:GeoExt.panel.Map,require:"GeoExt.plugins.PrintExtent",border:!1,anchor:"100% 100%",constructor:function(a){this.initDefaultLayers(a.config);var b=Ext.create("GeoExt.data.MapfishPrintProvider",{url:OpenEMap.basePathMapFish,autoLoad:!0,timeout:6E4,listeners:{encodelayer:function(a,b,c){c&&c.baseURL&&(c.baseURL=c.baseURL.replace("gwc/service/",""))}}}),c=Ext.create("GeoExt.plugins.PrintExtent",{printProvider:b});this.encode=function(a){var e=c.addPage();a&&(a=b.layouts.findRecord("name",
a),b.setLayout(a));a=b.encode(c.map,c.pages);c.removePage(e);return a};b.encode=function(a,b,c){a instanceof GeoExt.MapPanel&&(a=a.map);b=b instanceof Array?b:[b];c=c||{};if(!1!==this.fireEvent("beforeprint",this,a,b,c)){var g=Ext.apply({units:a.getUnits(),srs:a.baseLayer.projection.getCode(),layout:this.layout.get("name"),dpi:this.dpi.get("value")},this.customParams),h=b[0].feature.layer,k=[],j=a.layers.concat();Ext.Array.remove(j,a.baseLayer);Ext.Array.insert(j,0,[a.baseLayer]);Ext.each(j,function(a){a!==
h&&!0===a.getVisibility()&&(a=this.encodeLayer(a))&&k.push(a)},this);g.layers=k;var l=[];Ext.each(b,function(a){l.push(Ext.apply({center:[a.center.lon,a.center.lat],scale:a.scale.get("value"),rotation:a.rotation},a.customParams))},this);g.pages=l;if(c.overview){var m=[];Ext.each(c.overview.layers,function(a){(a=this.encodeLayer(a))&&m.push(a)},this);g.overviewLayers=m}if(c.legend&&this.fireEvent("beforeencodelegend",this,g,c.legend)){a=c.legend;(b=a.rendered)||(a=a.cloneConfig({renderTo:document.body,
hidden:!0}));var n=[];a.items&&a.items.each(function(a){if(!a.hidden){var b=this.encoders.legends[a.getXType()];n=n.concat(b.call(this,a,g.pages[0].scale))}},this);b||a.destroy();g.legends=n}return g}};a.plugins=[c];this.callParent(arguments);this.layers.add(this.searchLayer);this.layers.add(this.drawLayer);this.layers.add(this.measureLayer);this.layers.add(this.measureLayerArea);this.layers.add(this.measureLayerLength);this.layers.add(this.measureLayerSegments);this.map.setLayerIndex(this.measureLayer,
98);this.map.setLayerIndex(this.measureLayerArea,98);this.map.setLayerIndex(this.measureLayerLength,98);this.map.setLayerIndex(this.measureLayerSegments,98);this.selectControl=new OpenLayers.Control.SelectFeature(this.drawLayer);this.map.addControl(this.selectControl);this.map.popup=[]},unselectAll:function(){this.drawLayer.selectedFeatures.forEach(function(a){this.selectControl.unselect(a)},this)},parseStyle:function(a){var b={Point:{pointRadius:4,graphicName:"square",fillColor:"#e8ffee",fillOpacity:0.9,
strokeWidth:1,strokeOpacity:1,strokeColor:"#29bf4c"},Line:{strokeWidth:3,strokeColor:"#29bf4c",strokeOpacity:1},Polygon:{strokeWidth:3,strokeOpacity:1,strokeColor:"#29bf4c",fillColor:"#e8ffee",fillOpacity:0.9}},c=function(a){var c=Ext.clone(b);a.Point?(Ext.apply(c.Point,a.Point),Ext.apply(c.Line,a.Line),Ext.apply(c.Polygon,a.Polygon),a.labelSegments&&Ext.apply(c.labelSegments,a.labelSegments),a.labelLength&&Ext.apply(c.labelLength,a.labelLength)):(Ext.apply(c.Point,a),Ext.apply(c.Line,a),Ext.apply(c.Polygon,
a));return c},d=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:b})]}),e,f,g;a&&(a["default"]&&(d=c(a["default"]),d=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:d})]})),a.select&&(e=c(a.select),e=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:e})]})),a.temporary&&(f=c(a.temporary),f=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:f})]})),a.labelLength&&(g=c(a),g=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:g})]})),
a["default"]||(d=c(a),d=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:d})]})));a={"default":d};e&&(a.select=e);f&&(a.temporary=f);g&&(a["default"]=g);return new OpenLayers.StyleMap(a)},initDefaultLayers:function(a){a.drawStyle||(a.drawStyle={"default":{Point:{pointRadius:4,graphicName:"square",fillColor:"#ffffff",fillOpacity:1,strokeWidth:1,strokeOpacity:1,strokeColor:"#2969bf"},Line:{strokeWidth:3,strokeColor:"#2969bf",strokeOpacity:1},Polygon:{strokeWidth:3,strokeOpacity:1,strokeColor:"#2969bf",
fillOpacity:0}},select:{strokeWidth:3,strokeOpacity:1,fillColor:"#deecff",fillOpacity:0.9,strokeColor:"#2969bf"},temporary:{strokeWidth:3,strokeOpacity:0.75,fillColor:"#ff00ff",fillOpacity:0,strokeColor:"#ff00ff"}});this.drawLayer=new OpenLayers.Layer.Vector("Drawings",{displayInLayerSwitcher:!1,styleMap:this.parseStyle(a.drawStyle)});a.autoClearDrawLayer&&this.drawLayer.events.register("beforefeatureadded",this,function(){this.drawLayer.destroyFeatures()});this.drawLayer.events.register("beforefeaturemodified",
this,function(a){this.selectControl.select(a.feature)});this.drawLayer.events.register("afterfeaturemodified",this,function(){});this.searchLayer=new OpenLayers.Layer.Vector("Searchresult",{displayInLayerSwitcher:!1,styleMap:this.parseStyle({Point:{externalGraphic:"../resources/images/point_added.png",graphicWidth:15,graphicOpacity:1},Line:{strokeWidth:3,strokeColor:"#2969bf",strokeOpacity:1},Polygon:{strokeDashstyle:"dot",strokeWidth:3,strokeOpacity:1,strokeColor:"#f58d1e",fillOpacity:0}})});var b=
OpenLayers.Control.DynamicMeasure.styles;a=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:{Point:b.Point,Line:b.Line,Polygon:b.Polygon}})]});a=new OpenLayers.StyleMap({"default":a});var c=function(a){return new OpenLayers.StyleMap({"default":OpenLayers.Util.applyDefaults(null,b[a])})};this.measureLayer=new OpenLayers.Layer.Vector("MeasureLayer",{displayInLayerSwitcher:!1,styleMap:a});this.measureLayerArea=new OpenLayers.Layer.Vector("MeasureLayerArea",{displayInLayerSwitcher:!1,
styleMap:c("labelArea")});this.measureLayerSegments=new OpenLayers.Layer.Vector("MeasureLayerSegments",{displayInLayerSwitcher:!1,styleMap:c("labelSegments")});this.measureLayerLength=new OpenLayers.Layer.Vector("MeasureLayerLength",{displayInLayerSwitcher:!1,styleMap:c("labelLength")})},setInitialExtent:function(){var a=this.map;a.getCenter()||(this.center||this.zoom?a.setCenter(this.center,this.zoom):this.extent instanceof OpenLayers.Bounds?a.zoomToExtent(this.extent,!1):a.zoomToMaxExtent())}});
Ext.define("OpenEMap.view.SearchCoordinate",{extend:Ext.container.Container,layout:"column",defaults:{labelWidth:20},width:300,border:!1,zoom:5,initComponent:function(a){this.items=[{itemId:"e",fieldLabel:"E",xtype:"textfield",columnWidth:0.5},{itemId:"n",fieldLabel:"N",xtype:"textfield",columnWidth:0.5},{xtype:"button",text:"S\u00f6k",handler:function(){var a=this.down("#e").getValue(),c=this.down("#n").getValue();this.mapPanel.map.setCenter([a,c],this.zoom);this.fireEvent("searchcomplete",[a,c])},
scope:this}];this.addEvents(["searchcomplete"]);this.callParent(arguments)}});
Ext.define("OpenEMap.form.SearchRegisterenhet",{extend:Ext.form.field.ComboBox,alias:"widget.searchregisterenhet",require:["Ext.data.*","Ext.form.*"],queryDelay:800,initComponent:function(){var a,b;this.search&&this.search.options&&(a=this.search.options.municipalities.join(","),b=this.search.options.zoom);var c=this.mapPanel.searchLayer;this.store=Ext.create("Ext.data.Store",{proxy:{type:"ajax",url:OpenEMap.basePathLM+"registerenheter",extraParams:{lmuser:OpenEMap.lmUser},reader:{type:"json",root:"features"}},
fields:[{name:"id",mapping:"properties.objid"},{name:"name",mapping:"properties.name"}]});if(this.store.loading&&this.store.lastOperation){var d=Ext.Ajax.requests,e;for(e in d)d.hasOwnProperty(e)&&d[e].options==this.store.lastOperation.request&&Ext.Ajax.abort(d[e])}this.store.on("beforeload",function(a,b){a.lastOperation=b},this,{single:!0});this.labelWidth=60;this.displayField="name";this.valueField="id";this.queryParam="q";this.forceSelection=this.typeAhead=!0;this.listeners={select:function(a,
d){var e=d[0].get("id");this.mapPanel.setLoading(!0);this.mapPanel.searchLayer.destroyFeatures();OpenEMap.requestLM({url:"registerenheter/"+e+"/enhetsomraden?",success:function(a){this.resultPanel.expand();a=(new OpenLayers.Format.GeoJSON).read(a.responseText);c.addFeatures(a);a=c.getDataExtent();b?this.mapPanel.map.setCenter(a.getCenterLonLat(),b):this.mapPanel.map.zoomToExtent(a)},failure:function(){Ext.Msg.alert("Fel","Ingen tr\u00e4ff.")},callback:function(){this.mapPanel.setLoading(!1)},scope:this})},
beforequery:function(b){a&&null===b.query.match(a)&&(b.query=a+" "+b.query)},scope:this};this.callParent(arguments)}});
Ext.define("OpenEMap.form.SearchAddress",{extend:Ext.form.field.ComboBox,alias:"widget.searchaddress",require:["Ext.data.*","Ext.form.*"],initComponent:function(){var a,b=5;this.search&&this.search.options&&(a=this.search.options.municipalities.join(","),b=this.search.options.zoom);var c=this.mapPanel.searchLayer;this.store=Ext.create("Ext.data.Store",{proxy:{type:"ajax",url:OpenEMap.basePathLM+"addresses",extraParams:{lmuser:OpenEMap.lmUser},reader:{type:"array"}},fields:["id","name","x","y","fnr"]});
if(this.store.loading&&this.store.lastOperation){var d=Ext.Ajax.requests,e;for(e in d)d.hasOwnProperty(e)&&d[e].options==this.store.lastOperation.request&&Ext.Ajax.abort(d[e])}this.store.on("beforeload",function(a,b){a.lastOperation=b},this,{single:!0});this.labelWidth=60;this.displayField="name";this.valueField="id";this.queryParam="q";this.forceSelection=this.typeAhead=!0;this.listeners={select:function(a,d){var e=d[0].data.fnr,k=d[0].data.x,j=d[0].data.y;this.mapPanel.setLoading(!0);this.mapPanel.searchLayer.destroyFeatures();
OpenEMap.requestLM({url:"registerenheter?fnr\x3d"+e,success:function(a){!1===Ext.decode(a.responseText).success?Ext.Msg.alert("Meddelande","Ingen fastighet kunde hittas p\u00e5 adressen."):(this.resultPanel.expand(),a=(new OpenLayers.Format.GeoJSON).read(a.responseText,"FeatureCollection"),c.addFeatures(a),a=new OpenLayers.Geometry.Point(k,j),feature=new OpenLayers.Feature.Vector(a),c.addFeatures([feature]),this.mapPanel.map.setCenter([k,j],b))},failure:function(){Ext.Msg.alert("Fel","Ok\u00e4nt.")},
callback:function(){this.mapPanel.setLoading(!1)},scope:this})},beforequery:function(b){a&&null===b.query.match(a)&&(b.query=a+" "+b.query)},scope:this};this.callParent(arguments)}});
Ext.define("OpenEMap.form.SearchPlacename",{extend:Ext.form.field.ComboBox,alias:"widget.searchplacename",require:["Ext.data.*","Ext.form.*"],initComponent:function(){var a,b=5;this.search&&this.search.options&&(a=this.search.options.municipalities.join(","),b=this.search.options.zoom);this.store=Ext.create("Ext.data.Store",{proxy:{type:"ajax",url:OpenEMap.basePathLM+"placenames",extraParams:{lmuser:OpenEMap.lmUser,kommunkod:a},reader:{type:"json",root:"features"}},fields:[{name:"id",mapping:"properties.id"},
{name:"name",mapping:"properties.name"}]});if(this.store.loading&&this.store.lastOperation){a=Ext.Ajax.requests;for(var c in a)a.hasOwnProperty(c)&&a[c].options==this.store.lastOperation.request&&Ext.Ajax.abort(a[c])}this.store.on("beforeload",function(a,b){a.lastOperation=b},this,{single:!0});this.labelWidth=60;this.displayField="name";this.valueField="id";this.queryParam="q";this.forceSelection=this.typeAhead=!0;this.listeners={select:function(a,c){var f=c[0].raw.geometry.coordinates;this.mapPanel.map.setCenter([f[1],
f[0]],b)},scope:this};this.callParent(arguments)}});
Ext.define("OpenEMap.form.SearchES",{extend:Ext.form.field.ComboBox,alias:"widget.searches",require:["Ext.data.*","Ext.form.*"],initComponent:function(){var a=this.mapPanel.map,b=this.mapPanel.searchLayer;this.store=Ext.create("Ext.data.Store",{proxy:{type:"ajax",url:OpenEMap.basePathES+"_search",reader:{type:"json",root:"hits.hits",totalProperty:"hits.total",idProperty:"_id"}},fields:[{name:"type",mapping:"_type"},{name:"hit",mapping:"_source.properties.PLANNUMMER"},{name:"geometry",mapping:"_source.geometry"}]});
this.displayField="hit";this.valueField="id";this.queryParam="q";this.forceSelection=this.typeAhead=!0;this.allowOnlyWhitespace=this.allowBlank=!1;this.minLength=this.minChars=4;this.hideTrigger=this.preventMark=!0;this.listeners={select:function(c,d){var e=d[0].data.geometry,e=(new OpenLayers.Format.GeoJSON({ignoreExtraDims:!0})).read(e,"Geometry"),e=new OpenLayers.Feature.Vector(e);b.destroyFeatures();b.addFeatures([e]);a.zoomToExtent(e.geometry.getBounds())},beforequery:function(a){a.query='"'+
a.query+'"*'},scope:this};this.callParent(arguments)}});
Ext.define("OpenEMap.view.SearchFastighet",{extend:Ext.form.Panel,border:!1,initComponent:function(){function a(a){var b=null,b="searchregisterenhet"===a?this.search&&this.search.searchEstates?this.search.searchEstates:null:"searchaddress"===a?this.search&&this.search.searchAddresses?this.search.searchAddresses:null:this.search&&this.search.searchPlacenames?this.search.searchPlacenames:null;return{xtype:a,mapPanel:this.mapPanel,basePath:this.basePath,search:b,resultPanel:d}}this.renderTo||(this.title=
"S\u00f6k",this.bodyPadding=5);var b=[];this.search&&this.search.searchEstates&&b.push(["searchregisterenhet","Fastighet"]);this.search&&this.search.searchAddresses&&b.push(["searchaddress","Adress"]);this.search&&this.search.searchPlacenames&&b.push(["searchplacename","Ort"]);this.search&&(this.search.searchES&&this.search.searchES.detaljplan)&&b.push(["searches","Detaljplaner"]);var c=Ext.create("GeoExt.data.FeatureStore",{layer:this.mapPanel.searchLayer,featureFilter:new OpenLayers.Filter.Function({evaluate:function(a){return a.attributes.name?
!0:!1}}),fields:[{name:"name"},{name:"fid"},{name:"objid"}]}),d=Ext.create("Ext.grid.Panel",{columns:[{text:"Namn",dataIndex:"name",flex:1}],store:c,selType:"featuremodel"});this.items=[{layout:"column",border:!1,items:[{xtype:"combo",width:110,store:b,forceSelection:!0,queryMode:"local",value:"searchregisterenhet",border:!1,listeners:{change:function(b,c){var d=this.down("#search");this.mapPanel.searchLayer.destroyFeatures();d.removeAll();d.add(a.call(this,c))},scope:this}},{itemId:"search",columnWidth:1,
layout:"fit",border:!1,items:a.call(this,"searchregisterenhet")}]}];this.items.push(d);this.callParent(arguments)}});Ext.define("OpenEMap.view.Scalebar",{extend:Ext.panel.Panel,bodyStyle:"background : transparent",border:!1,getTools:function(){},constructor:function(a){Ext.apply(this,a);var b=null,b=(b=document.getElementById(this.renderTo))?new OpenLayers.Control.ScaleLine({div:b}):new OpenLayers.Control.ScaleLine;this.mapPanel.map.addControl(b);this.callParent(arguments)}});
Ext.define("OpenEMap.view.ShowCoordinate",{extend:Ext.container.Container,defaults:{labelWidth:10},border:!1,layout:"column",width:150,srs:"",constructor:function(a){this.items=[{itemId:"e",fieldLabel:"E",xtype:"textfield",columnWidth:0.5,baseCls:a.cls,baseBodyCls:a.cls,bodyCls:a.cls,fieldCls:a.cls,fieldBodyCls:a.cls,formItemCls:a.cls,inputRowCls:a.cls,labelCls:a.cls},{itemId:"n",fieldLabel:"N",xtype:"textfield",columnWidth:0.5,baseCls:a.cls,baseBodyCls:a.cls,bodyCls:a.cls,fieldCls:a.cls,fieldBodyCls:a.cls,
formItemCls:a.cls,inputRowCls:a.cls,labelCls:a.cls}];this.callParent(arguments)}});
Ext.define("OpenEMap.view.ZoomTools",{extend:Ext.panel.Panel,bodyStyle:"background : transparent",border:!1,getTools:function(){Ext.util.CSS.getRule(".oep-tools");var a=[],b=Ext.create("GeoExt.slider.Zoom",{height:160,vertical:!0,aggressive:!0,margin:"5 0 5 0",map:this.mapPanel.map});a.push({xtype:"button",iconCls:"zoomtools-plus",mapPanel:this.mapPanel,scale:"large",cls:"x-action-btn",listeners:{click:function(){this.mapPanel.map.zoomIn()},scope:this}});a.push(b);a.push({xtype:"button",scale:"large",
cls:"x-action-btn",iconCls:"zoomtools-minus",mapPanel:this.mapPanel,listeners:{click:function(){this.mapPanel.map.zoomOut()},scope:this}});return a},constructor:function(a){Ext.apply(this,a);this.items=this.getTools();this.callParent(arguments)}});
Ext.define("OpenEMap.model.GroupedLayerTreeModel",{extend:Ext.data.Model,fields:[{name:"text",type:"string"},{name:"checkedGroup",type:"string"},{name:"isGroupLayer"},{name:"layer"},{name:"queryable",type:"boolean"},{name:"clickable",type:"boolean"},{name:"isGroupLayer",type:"boolean"},{name:"expanded",type:"boolean"},{name:"layerId"},{name:"name",type:"string"},{name:"urlToMetadata"},{name:"wms"},{name:"wfs"},{name:"serverId"},{name:"metadata"},{name:"legendURL"},{name:"layers"}]});
Ext.define("OpenEMap.data.GroupedLayerTree",{extend:Ext.data.TreeStore,model:"OpenEMap.model.GroupedLayerTreeModel",defaultRootProperty:"layers",proxy:{type:"memory"},maxLayerIndex:1E3,listeners:{beforeinsert:function(a,b,c){return this.onBeforeInsert(a,b,c)},beforeappend:function(a,b){return this.onBeforeAppend(a,b)},insert:function(a,b){this.onInsertAndAppend(b)},append:function(a,b){this.onInsertAndAppend(b)},remove:function(a,b,c){this.onRemove(a,b,c)}},constructor:function(a){a=Ext.apply({},
a);this.callParent([a])},getLayerConfiguration:function(a){function b(a,c){for(var d={name:a.get("name"),isGroupLayer:a.get("isGroupLayer"),expanded:a.get("expanded"),queryable:a.get("queryable"),clickable:a.get("clickable"),wms:"string"===typeof a.get("wms")?{}:a.get("wms"),wfs:"string"===typeof a.get("wfs")?{}:a.get("wfs"),layer:c?a.get("layer"):void 0,metadata:"string"===typeof a.get("metadata")?{}:a.get("metadata"),layers:[]},e=0;e<a.childNodes.length;e++)d.layers.push(b(a.childNodes[e],c));return d}
for(var c=[],d=this.getRootNode().childNodes,e=0;e<d.length;e++)c.push(b(d[e],a));return c},onBeforeAppend:function(a,b){return a&&!a.isRoot()&&!b.isLeaf()?!1:!0},onBeforeInsert:function(a,b,c){return!c.parentNode.isRoot()&&!b.isLeaf()?!1:!0},onInsertAndAppend:function(a){this._inserting||(this._inserting=!0,a.cascadeBy(function(a){var c=a.get("layer");a.getLayer=function(){return this.get("layer")};this.addWMSLegend(a);c&&""!==c&&this.map&&null===this.map.getLayer(c)&&(c&&!0===c.displayInLayerSwitcher)&&
this.map.addLayer(c)},this),this.reorderLayersOnMap(),delete this._inserting)},onRemove:function(a,b,c){!this._removing&&!c&&(this._removing=!0,b.cascadeBy(function(a){(a=a.get("layer"))&&a.map&&this.map.removeLayer(a)},this),delete this._removing)},reorderLayersOnMap:function(){var a=this.getRootNode();if(a){var b=this.maxLayerIndex;a.cascadeBy(function(a){if(a=a.get("layer"))a.setZIndex(b),b--},this)}},addWMSLegend:function(a){var b=a.get("layer");if(b){if(Ext.isIE9)return a;b.legendURL?(a.set("legendURL",
b.legendURL),a.gx_urllegend=Ext.create("GeoExt.container.UrlLegend",{layerRecord:a,showTitle:!1,hidden:!0,deferRender:!0,cls:"legend"})):"OpenLayers.Layer.WMS"==b.CLASS_NAME&&(a.gx_wmslegend=Ext.create("GeoExt.container.WmsLegend",{layerRecord:a,showTitle:!1,hidden:!0,deferRender:!0,cls:"legend"}))}return a},unbind:function(){this.un("beforeinsert",this.onBeforeInsert,this);this.un("beforeappend",this.onBeforeAppend,this);this.un("insert",this.onInsertAndAppend,this);this.un("append",this.onInsertAndAppend,
this);this.un("remove",this.onRemove,this);this.map=null},destroy:function(){}});
Ext.define("OpenEMap.view.layer.Tree",{extend:Ext.tree.Panel,rootVisible:!1,hideHeaders:!0,initComponent:function(){!this.store&&this.mapPanel&&(this.store=Ext.create("OpenEMap.data.GroupedLayerTree",{root:{text:this.mapPanel.config&&this.mapPanel.config.name?this.mapPanel.config.name:"Lager",expanded:!0,isGroupLayer:!0,layers:this.mapPanel.map.layerSwitcherLayerTree},map:this.mapPanel.map}));this.on("checkchange",function(a,b){var c=a.parentNode;a.cascadeBy(function(a){a.set("checked",b);(a=a.get("layer"))&&
a.setVisibility(b)});b?c.isRoot()||c.set("checked",b):!c.isRoot()&&!c.childNodes.some(function(a){return a.get("checked")})&&c.set("checked",b)});this.on("cellclick",function(a,b,c,d){if((d.gx_wmslegend||d.gx_urllegend)&&d.store)a=d.gx_wmslegend||d.gx_urllegend,a.isHidden()?(a.rendered||a.render(b),a.show()):a.hide()});this.callParent(arguments)},getConfig:function(a){var b=Ext.clone(this.client.initialConfig);a=this.getStore().getLayerConfiguration(a);var c=b.layers.filter(function(a){return a.wms&&
a.wms.options.isBaseLayer?a:!1});b.layers=c.concat(a);return b}});
Ext.define("OpenEMap.data.DataHandler",{metadataAbstractWsUrl:null,metadataWsUrl:null,layersWsUrl:null,metadataAbstractCache:{},constructor:function(a){this.wsUrls=OpenEMap.wsUrls;Ext.apply(this,a)},getLayer:function(){},getLayers:function(){},getMetadata:function(a,b){a&&this.wsUrls.metadata&&this.doRequest({url:this.wsUrls.basePath+this.wsUrls.metadata+"/"+a},b)},getMetadataAbstract:function(a,b){if(a&&this.wsUrls.metadata_abstract){var c=this;c.metadataAbstractCache[a]?b(c.metadataAbstractCache[a]):
this.doRequest({url:this.wsUrls.basePath+this.wsUrls.metadata_abstract+"/"+a},function(d){b(d);c.metadataAbstractCache[a]=d})}},updateConfiguration:function(a,b,c){this.doRequest({url:this.wsUrls.basePath+this.wsUrls.adminconfigs+"/config/"+a,method:"PUT",jsonData:b},c)},saveNewConfiguration:function(a,b){this.doRequest({url:this.wsUrls.basePath+this.wsUrls.adminconfigs+"/config",method:"POST",jsonData:a},b)},deleteConfiguration:function(a,b,c){this.doRequest({url:this.wsUrls.basePath+this.wsUrls.adminconfigs+
"/config/"+a,method:"DELETE",jsonData:b},c)},doRequest:function(a,b){var c=this;if(a&&a.method&&("POST"===a.method&&"PUT"===a.method)&&!b)return c.onFailure("no callback function"),!1;Ext.Ajax.request(Ext.apply({success:function(a){if(a&&a.responseText)a=Ext.decode(a.responseText),b&&b(a);else c.onFailure()},failure:function(b){c.onFailure(b.status+" "+b.statusText+", "+a.url)}},a?a:{}))},onFailure:function(a){console.error(a)}});
Ext.define("OpenEMap.view.layer.TreeFilter",{extend:Ext.AbstractPlugin,alias:"plugin.treefilter",collapseOnClear:!0,allowParentFolders:!1,init:function(a){this.tree=a;a.filter=Ext.Function.bind(this.filter,this);a.clearFilter=Ext.Function.bind(this.clearFilter,this)},filter:function(a,b,c){var d=this,e=d.tree,f=[],g=e.getRootNode(),h=[],k;b=b||"text";c=c||RegExp(a,"ig");Ext.isEmpty(a)?d.clearFilter():(e.expandAll(),g.cascadeBy(function(a){a.get(b).match(c)&&f.push(a)}),!1===d.allowParentFolders&&
Ext.each(f,function(a){a.isLeaf()||Ext.Array.remove(f,a)}),Ext.each(f,function(a){g.cascadeBy(function(b){!0===b.contains(a)&&h.push(b)});!0===d.allowParentFolders&&!a.isLeaf()&&a.cascadeBy(function(a){h.push(a)});h.push(a)}),g.cascadeBy(function(a){if(k=Ext.fly(e.getView().getNode(a)))k.setVisibilityMode(Ext.Element.DISPLAY),k.setVisible(Ext.Array.contains(h,a))}))},clearFilter:function(){var a=this.tree,b=a.getRootNode();this.collapseOnClear&&a.collapseAll();b.cascadeBy(function(b){(viewNode=Ext.fly(a.getView().getNode(b)))&&
viewNode.show()})}});
Ext.define("OpenEMap.view.layer.Add",{extend:OpenEMap.view.layer.Tree,title:"L\u00e4gg till lager",width:250,height:550,headerPosition:"top",collapsible:!0,collapseMode:"header",collapseDirection:"right",titleCollapse:!0,viewConfig:{plugins:{ptype:"treeviewdragdrop",enableDrop:!1},copy:!0},plugins:{ptype:"treefilter",allowParentFolders:!0},dockedItems:[{xtype:"toolbar",dock:"top",layout:"fit",items:[{xtype:"trigger",triggerCls:"x-form-clear-trigger",onTriggerClick:function(){this.reset();this.focus()},
listeners:{change:function(a,b){a.up("treepanel").filter(b)},buffer:250}}]}],initComponent:function(){this.columns=[{xtype:"treecolumn",flex:1,dataIndex:"text"},this.metadataColumn];this.store=Ext.create("OpenEMap.data.GroupedLayerTree");Ext.Ajax.request({url:OpenEMap.basePathProxy+OpenEMap.wmsURLs.getCapabilities,success:this.parseCapabilities,scope:this,disableCaching:!1});this.callParent(arguments)},parseCapabilities:function(a){var b=(new OpenLayers.Format.WMSCapabilities).read(a.responseText);
a=this.store.setRootNode({});var c=function(a){var b=a.split(":");return 1<b.length?b[1]:a};b.capability.layers.sort(function(a,b){return c(a.name)<c(b.name)?-1:c(a.name)>c(b.name)?1:0});b=b.capability.layers.map(function(a){a={text:c(a.name),leaf:!0,checked:!0,title:a.title,name:a.title,queryable:a.queryable,clickable:a.queryable,isGroupLayer:!1,visibility:!0,metadataURL:0<a.metadataURLs.length?a.metadataURLs[0]:null,wms:{url:OpenEMap.wmsURLs.url,params:{layers:a.name,format:"image/png",transparent:!0},
options:{isBaseLayer:!1,visibility:!0}}};var b=Ext.create("OpenEMap.config.Parser");a.layer=b.createLayer(a);return a});a.appendChild(b)}});
Ext.define("OpenEMap.view.MetadataWindow",{extend:Ext.Window,title:"Metadata",width:600,height:500,border:0,layout:"fit",closeAction:"hide",TRANSLATION:{sv:{tag:{"gmd:citation":"","gmd:CI_Address":"","gmd:CI_Citation":"","gmd:CI_Contact":"","gmd:CI_Date":"","gmd:CI_Telephone":"","gmd:CI_ResponsibleParty":"","gmd:identificationInfo":"","gmd:EX_BoundingPolygon":"","gmd:EX_Extent":"","gmd:EX_GeographicBoundingBox":"","gmd:EX_GeographicDescription":"","gmd:EX_TemporalExtent":"","gmd:EX_VerticalExtent":"",
"gmd:MD_BrowseGraphic":"","gmd:MD_Constraints":"","gmd:MD_Identifier":"","gmd:MD_Keywords":"","gmd:MD_LegalConstraints":"","gmd:MD_Metadata":"","gmd:MD_MaintenanceInformation":"","gmd:MD_SecurityConstraints":"","gmd:thesaurusName":"","gmd:voice":"","srv:SV_ServiceIdentification":"","gmd:accessConstraints":"Nyttjanderestriktioner","gmd:abstract":"Sammanfattning","gmd:address":"Adress","gmd:alternateTitle":"Alternativ titel","gmd:city":"Stad","gmd:classification":"Klassificering","gmd:contact":"Metadatakontakt",
"gmd:contactInfo":"Kontaktinformation","gmd:date":"Datum","gmd:dateStamp":"Datum","gmd:dateType":"Datumtyp","gmd:descriptiveKeywords":"Nyckelordslista","gmd:electronicMailAddress":"E-post","gmd:fileIdentifier":"Identifierare f\u00f6r metadatam\u00e4ngden","gmd:graphicOverview":"Exempelbild","gmd:hierarchyLevel":"Hierarkisk niv\u00e5 (Resurstyp)","gmd:individualName":"Person","gmd:identifier":"Identifierare","gmd:keyword":"Nyckelord","gmd:language":"Spr\u00e5k","gmd:metadataStandardName":"Metadatastandardversion",
"gmd:metadataStandardVersion":"Metadatastandard","gmd:organisationName":"Organisation","gmd:otherConstraints":"Andra restriktioner","gmd:phone":"Telefonnummer","gmd:pointOfContact":"Kontakt","gmd:resourceConstraints":"Restriktioner och begr\u00e4nsningar","gmd:role":"Ansvarsomr\u00e5de","gmd:status":"Status","gmd:title":"Titel","gmd:type":"Typ","gmd:useLimitation":"Anv\u00e4ndbarhetsbegr\u00e4nsningar"},codeListValue:{swe:"Svenska",service:"Tj\u00e4nst",pointOfContact:"Kontakt"}}},initComponent:function(){this.overviewTab=
new Ext.Panel({title:"\u00d6versikt"});this.metadataTab=new Ext.Panel({title:"Information om metadata"});this.dataTab=new Ext.Panel({title:"Information om data"});this.qualityTab=new Ext.Panel({title:"Kvalitet"});this.distributionTab=new Ext.Panel({title:"Distribution"});this.restTab=new Ext.Panel({title:"Rest"});this.items=Ext.create("Ext.tab.Panel",{activeTab:0,defaults:{autoScroll:!0},items:[this.overviewTab,this.metadataTab,this.dataTab,this.qualityTab,this.distributionTab,this.restTab]});this.callParent(arguments)},
showMetadata:function(a){var b=this;this.dataHandler.getMetadata(a,function(a){a.children&&(a=b.parseMetadata(a.children),b.overviewTab.html=a.overview,b.metadataTab.html=a.metadata_info,b.dataTab.html=a.data_info,b.qualityTab.html=a.quality,b.distributionTab.html=a.distribution,b.restTab.html=a.rest,b.show())})},translate:function(a,b){var c=null;try{c=this.TRANSLATION.sv[a][b],"string"!==typeof c&&(c=b)}catch(d){translateTag=null}return c},parseMetadataTextTag:function(a){var b=null;a.tag&&(b=this.translate("tag",
a.tag),b=null!==b?""!==b?"\x3cb\x3e"+b+"\x3c/b\x3e":"":null);a.text&&(b=a.text);a.attributes&&a.attributes.codeListValue&&(b=this.translate("codeListValue",a.attributes.codeListValue));return b},getGroups:function(a,b){var c=[],d;for(d in b)for(var e=0;e<b[d].length;e++)-1!==a.indexOf(b[d][e])&&c.push(d);0===c.length&&c.push("rest");return c},metadataIterator:function(a,b,c,d){var e=this.parseMetadataTextTag(a);d=("undefined"!==typeof d?d+"\x3e":"")+a.tag;for(var f=this.getGroups(d,c),g=0;g<f.length;g++){var h=
f[g];"string"!==typeof b[h]&&(b[h]="");if(null!==e){b[h]+="\x3cli\x3e";b[h]+=e;if(a.children&&0===g){b[h]+=""!==e?"\x3cul\x3e":"";for(var k=0;k<a.children.length;k++)this.metadataIterator(a.children[k],b,c,d);b[h]+=""!==e?"\x3c/ul\x3e":""}b[h]+="\x3c/li\x3e"}}},parseMetadata:function(a){var b={};this.metadataIterator(a[0],b,{overview:["gmd:MD_Metadata\x3egmd:identificationInfo\x3esrv:SV_ServiceIdentification\x3egmd:citation\x3egmd:CI_Citation\x3egmd:title","gmd:MD_Metadata\x3egmd:identificationInfo\x3esrv:SV_ServiceIdentification\x3egmd:abstract",
"gmd:MD_Metadata\x3egmd:identificationInfo\x3esrv:SV_ServiceIdentification\x3egmd:descriptiveKeywords","gmd:MD_Metadata\x3egmd:identificationInfo\x3esrv:SV_ServiceIdentification\x3egmd:graphicOverview"],metadata_info:"gmd:MD_Metadata\x3egmd:fileIdentifier gmd:MD_Metadata\x3egmd:language gmd:MD_Metadata\x3egmd:dateStamp gmd:MD_Metadata\x3egmd:hierarchyLevel gmd:MD_Metadata\x3egmd:metadataStandardName gmd:MD_Metadata\x3egmd:metadataStandardVersion gmd:MD_Metadata\x3egmd:contact".split(" "),data_info:["gmd:MD_Metadata\x3egmd:identificationInfo"],
quality:["gmd:MD_Metadata\x3egmd:dataQualityInfo"],distribution:["gmd:MD_Metadata\x3egmd:distributionInfo"]});return b}});Ext.define("OpenEMap.model.MapConfig",{extend:Ext.data.Model,fields:["configId","name"]});
Ext.define("OpenEMap.data.SavedMapConfigs",{extend:Ext.data.Store,model:"OpenEMap.model.MapConfig",storeId:"savedMapConfigs",autoLoad:!0,constructor:function(a){this.proxy={type:"rest",appendId:!0,url:(OpenEMap&&OpenEMap.wsUrls&&OpenEMap.wsUrls.basePath?OpenEMap.wsUrls.basePath:"")+(OpenEMap&&OpenEMap.wsUrls&&OpenEMap.wsUrls.adminconfigs?OpenEMap.wsUrls.adminconfigs:""),reader:{type:"json",root:"configs"},writer:{type:"json"}};this.callParent(arguments)}});
Ext.define("OpenEMap.view.SavedMapConfigs",{extend:Ext.grid.Panel,autoScroll:!0,hideHeaders:!0,id:"savedMapConfigsGrid",constructor:function(){this.store=Ext.create("OpenEMap.data.SavedMapConfigs");this.columns=[{header:"Name",dataIndex:"name",flex:1},{xtype:"actioncolumn",width:40,iconCls:"action-load",tooltip:"Ladda",handler:function(a,b,c,d,e,f){this.client.destroy();this.client.configure(f.raw,this.client.initialOptions);e.stopEvent();return!1}.bind(this)},{xtype:"actioncolumn",width:40,iconCls:"action-remove",
tooltip:"Ta bort",handler:function(a,b,c,d,e,f){Ext.MessageBox.confirm("Ta bort","Vill du verkligen ta bort konfigurationen?",function(c){"yes"===c&&(c=a.getStore(),a.panel.dataHandler.deleteConfiguration(f.get("configId"),{configId:f.get("configId")}),c.removeAt(b))});e.stopEvent();return!1}}];this.callParent(arguments)}});
Ext.define("OpenEMap.view.layer.Advanced",{extend:Ext.container.Container,layout:{type:"hbox",pack:"end",align:"stretch"},width:500,height:650,initComponent:function(a){var b=this;this.dataHandler=Ext.create("OpenEMap.data.DataHandler");this.metadataWindow=Ext.create("OpenEMap.view.MetadataWindow",{dataHandler:this.dataHandler});this.savedMapConfigs=Ext.create("OpenEMap.view.SavedMapConfigs",{dataHandler:this.dataHandler,client:this.client});var c=Ext.create("Ext.Action",{text:"Byt namn...",disabled:!0,
handler:function(){var a=this.showOnMapLayerView.getSelectionModel().getSelection()[0];a&&Ext.Msg.prompt("Byt namn...","Ange nytt namn:",function(b,c){"ok"==b&&a.set("text",c)})}.bind(this)}),d=Ext.create("Ext.Action",{text:"Nytt grupplager",disabled:!0,handler:function(){var a=this.showOnMapLayerView.getSelectionModel().getSelection()[0];a&&Ext.Msg.prompt("Nytt grupplager","Ange namn:",function(b,c){if("ok"==b){var d=Ext.create("OpenEMap.model.GroupedLayerTreeModel",{text:c,checked:!0,isGroupLayer:!0});
a.appendChild(d)}})}.bind(this)}),e=Ext.create("Ext.menu.Menu",{items:[c,d]});this.showOnMapLayerView=Ext.create("OpenEMap.view.layer.Tree",{title:"Visas p\u00e5 kartan",width:250,height:500,region:"north",mapPanel:this.mapPanel,client:this.client,rootVisible:!0,viewConfig:{plugins:{ptype:"treeviewdragdrop",allowContainerDrops:!0,allowParentInserts:!0},listeners:{itemcontextmenu:function(a,b,c,d,j){j.stopEvent();e.showAt(j.getXY());return!1}}},columns:[{xtype:"gx_treecolumn",flex:1,dataIndex:"text"},
Ext.create("OpenEMap.action.MetadataInfoColumn",{metadataWindow:this.metadataWindow,dataHandler:this.dataHandler}),{xtype:"actioncolumn",width:40,iconCls:"action-remove",tooltip:"Ta bort",handler:function(a,b){for(var c=a.getStore().getAt(b),d=0;d<c.childNodes.length;d++)c.removeChild(c.childNodes[d]);c.remove()},dataHandler:this.dataHandler}],buttons:[{text:"Spara kartinneh\u00e5ll",handler:function(){if(b.orginalConfig){var a=Ext.clone(b.orginalConfig);Ext.MessageBox.prompt("Namn","Ange ett namn:",
function(c,d){"ok"==c&&0<d.length&&(a=b.getConfig(),d!==a.name?(a.name=d,b.dataHandler.saveNewConfiguration(a,function(){b.savedMapConfigs.getStore().load()})):a.configId&&b.dataHandler.updateConfiguration(a.configId,a))},this,!1,a.name)}}}]});this.showOnMapLayerView.getSelectionModel().on({selectionchange:function(a,b){1===b.length&&b[0].data.isGroupLayer?(c.enable(),"root"===b[0].internalId?d.enable():d.disable()):(c.disable(),d.disable())}});this.items=[Ext.create("OpenEMap.view.layer.Add",{mapPanel:this.mapPanel,
dataHandler:this.dataHandler,metadataColumn:Ext.create("OpenEMap.action.MetadataInfoColumn",{metadataWindow:this.metadataWindow,dataHandler:this.dataHandler})}),{xtype:"panel",layout:"border",width:"50%",border:!1,items:[b.showOnMapLayerView,{title:"Sparade kartor",region:"center",xtype:"panel",border:!1,layout:"fit",collapsible:!0,titleCollapse:!0,items:b.savedMapConfigs}]}];this.callParent(arguments)},getConfig:function(a){return this.showOnMapLayerView.getConfig(a)}});
Ext.define("OpenEMap.view.layer.Basic",{extend:OpenEMap.view.layer.Tree,overflowY:"auto",rootVisible:!1,height:300,border:!1,initComponent:function(){this.renderTo||(this.title="Lager",this.bodyPadding=5,this.collapsible=!0);this.callParent(arguments)}});
Ext.define("OpenEMap.Gui",{activeAction:null,objectConfigWindowTitle:"Object configuration",constructor:function(a){this.config=a.config;this.gui=a.gui;this.map=a.map;this.orginalConfig=a.orginalConfig;this.serverStore=a.serverStore;this.search=a.config.search;this.client=a.client;void 0===this.gui&&(this.gui={});void 0===this.gui.map&&(this.gui.map=!1);void 0===this.gui.rightPanel&&(this.gui.rightPanel={});this.mapPanel=Ext.create("OpenEMap.view.Map",{map:this.map,extent:this.config.extent,config:this.config,
listeners:{afterrender:function(){if(this.config.attribution){var a=this.mapPanel.getEl();Ext.DomHelper.append(a,'\x3cspan class\x3d"unselectable attribution"\x3e'+this.config.attribution+"\x3c/span\x3e")}},scope:this}});this.createToolbar();this.createZoomToolPanel();this.createObjectConfigPanel();this.createScalebarPanel();this.createShowCoordinatePanel();this.createSearchCoordinatePanel();this.createRightPanel();this.createBaseLayersPanel();a=[];a.push(this.mapPanel);this.zoomTools&&!this.gui.zoomTools.renderTo&&
a.push(this.zoomTools);this.objectConfig&&!this.gui.objectConfig.renderTo&&a.push(this.objectConfig);this.scalebar&&!this.gui.scalebar.renderTo&&a.push(this.scalebar);this.showCoordinate&&!this.gui.showCoordinate.renderTo&&a.push(this.showCoordinate);this.searchCoordinate&&!this.gui.searchCoordinate.renderTo&&a.push(this.searchCoordinate);this.rightPanel&&!this.gui.rightPanel.renderTo&&a.push(this.rightPanel);this.baseLayers&&!this.gui.baseLayers.renderTo&&a.push(this.baseLayers);this.toolbar&&!this.gui.toolbar.renderTo&&
a.push(this.toolbar);if(this.gui.map){var b=this.gui.map.renderTo?Ext.get(this.gui.map.renderTo):void 0;this.container=Ext.create("Ext.container.Container",Ext.apply({layout:"absolute",border:!1,width:b?b.getWidth():void 0,height:b?b.getHeight():void 0,items:a},this.gui.map))}else this.container=Ext.create("Ext.container.Viewport",{layout:"absolute",items:a})},destroy:function(){this.mapPanel&&this.mapPanel.destroy();this.zoomTools&&this.zoomTools.destroy();this.mapLayers&&this.mapLayers.destroy();
this.searchFastighet&&this.searchFastighet.destroy();this.searchCoordinate&&this.searchCoordinate.destroy();this.showCoordinate&&this.showCoordinate.destroy();this.toolbar&&this.toolbar.destroy();this.rightPanel&&this.rightPanel.destroy();this.baseLayers&&this.baseLayers.destroy();this.objectConfig&&this.objectConfig.destroy();this.objectConfigWindow&&this.objectConfigWindow.destroy();this.scalebar&&this.scalebar.destroy();this.container&&this.container.destroy()},onToggle:function(a,b){var c=a.baseAction;
this.objectConfig&&(b&&(this.mapPanel.unselectAll(),this.objectConfig.hide(),this.activeAction=c),c.toggle(b))},createToolbar:function(){var a=this.config.basePath,b=this.config.layers;this.config.tools||(this.config.tools=[]);var c=this.config.tools.map(function(c){var d;if(Ext.isObject(c)&&0<Ext.Object.getSize(c)||!Ext.isObject(c)&&!Ext.isEmpty(c)){c===this.config.tools[this.config.tools.length-1]&&(d="oep-tools-last");d={map:this.map,mapPanel:this.mapPanel,cls:d};c.constructor===Object&&(Ext.apply(d,
c),c=d.type,delete d.type);if("ZoomSelector"==c)return Ext.create("OpenEMap.form.ZoomSelector",{map:this.map});if("DrawObject"==c)d.objectConfigView=this.objectConfig;else if("Identify"==c)d.basePath=a,d.layers=b,d.client=this.client;else if("Popup"==c&&(d.layers=b,void 0===d.showOnlyFirstHit||null===d.showOnlyFirstHit))d.showOnlyFirstHit=!0;c=Ext.create("OpenEMap.action."+c,d);d.activate&&c.control&&(this.controlToActivate=c.control);c=Ext.create("Ext.button.Button",c);c.on("toggle",this.onToggle,
this);return c}},this),d=6;c.forEach(function(a){a&&!a.hideFromToolbar&&(d=a.constructor==String?d+1:a.width?d+a.width:d+24,d+=8)});d+=3;this.gui.toolbar&&!this.gui.toolbar.renderTo?this.toolbar=Ext.create("Ext.toolbar.Toolbar",Ext.apply({cls:"oep-tools",y:20,x:20,width:d,items:c},this.gui.toolbar)):this.gui.toolbar&&this.gui.toolbar.renderTo&&(this.toolbar=Ext.create("Ext.toolbar.Toolbar",Ext.apply({cls:"oep-tools",width:this.gui.toolbar.width||d,items:c},this.gui.toolbar)))},createRightPanel:function(){var a=
[];this.gui.rightPanel.y||(this.gui.rightPanel.y=20);this.gui.rightPanel.style||(this.gui.rightPanel.style="right: 20px");this.gui.layers&&(this.mapLayers=this.gui.layers&&"advanced"===this.gui.layers.type?Ext.create("OpenEMap.view.layer.Advanced",Ext.apply({mapPanel:this.mapPanel,orginalConfig:this.orginalConfig,client:this.client},this.gui.layers)):Ext.create("OpenEMap.view.layer.Basic",Ext.apply({mapPanel:this.mapPanel,client:this.client},this.gui.layers)),this.gui.layers.renderTo||a.push(this.mapLayers));
this.gui.searchFastighet&&this.search&&(this.searchFastighet=Ext.create("OpenEMap.view.SearchFastighet",Ext.apply({mapPanel:this.mapPanel,basePath:this.config.basePath,search:this.search},this.gui.searchFastighet)),this.gui.searchFastighet.renderTo||a.push(this.searchFastighet));0<a.length&&(this.rightPanel=Ext.create("Ext.panel.Panel",{renderTo:this.gui.rightPanel.renderTo,y:this.gui.rightPanel.y,layout:{type:"vbox",align:"stretch"},width:300,border:!1,style:this.gui.rightPanel.style,bodyStyle:{background:"transparent"},
items:a}))},createBaseLayersPanel:function(){if(!this.map.allOverlays&&this.gui.baseLayers){var a=this.map.layers;Ext.create("OpenEMap.config.Parser").extractBaseLayers(a)&&(!this.gui.baseLayers.renderTo&&!this.gui.baseLayers.style&&(this.gui.baseLayers.style={right:"20px",bottom:"20px"}),this.baseLayers=Ext.create("OpenEMap.view.BaseLayers",Ext.apply({mapPanel:this.mapPanel,renderTo:this.gui.baseLayers.renderTo},this.gui.baseLayers)))}},createZoomToolPanel:function(){this.gui.zoomTools&&(!this.gui.zoomTools.renderTo&&
!this.gui.zoomTools.style&&(this.gui.zoomTools.style={left:"20px",top:"76px"}),this.zoomTools=Ext.create("OpenEMap.view.ZoomTools",Ext.apply({mapPanel:this.mapPanel,renderTo:this.gui.zoomTools.renderTo,width:36},this.gui.zoomTools)))},createSearchCoordinatePanel:function(){this.gui.searchCoordinate&&this.gui.searchCoordinate.renderTo&&(this.searchCoordinate=Ext.create("OpenEMap.view.SearchCoordinate",Ext.apply({mapPanel:this.mapPanel},this.gui.searchCoordinate)))},createObjectConfigPanel:function(){this.gui.objectConfig&&
(this.objectConfig=Ext.create("OpenEMap.view.ObjectConfig",Ext.apply({mapPanel:this.mapPanel,gui:this},this.gui.objectConfig)),this.objectConfigWindow=Ext.create("Ext.window.Window",Ext.apply({title:this.objectConfigWindowTitle,width:480,height:300,layout:"fit",closable:!1,collapsible:!0,items:this.objectConfig},this.gui.objectConfig)),this.objectConfigWindow.show())},createShowCoordinatePanel:function(){this.gui.showCoordinate&&this.gui.showCoordinate.renderTo&&(this.cls||(this.cls="oep-show-coordinate"),
this.showCoordinate=Ext.create("OpenEMap.view.ShowCoordinate",Ext.apply({mapPanel:this.mapPanel,cls:this.cls,setCoord:function(a){a=this.getLonLatFromPixel(a.xy);var b=parent.mapClient.gui.showCoordinate.getComponent("e"),c=parent.mapClient.gui.showCoordinate.getComponent("n");b.setValue(Math.round(a.lon));c.setValue(Math.round(a.lat))}},this.gui.showCoordinate)),this.map.events.register("mousemove",this.map,this.showCoordinate.setCoord))},createScalebarPanel:function(){this.gui.scalebar&&(this.scalebar=
Ext.create("OpenEMap.view.Scalebar",Ext.apply({mapPanel:this.mapPanel},this.gui.scalebar)))}});Ext.define("OpenEMap.model.Server",{extend:Ext.data.Model,fields:["id","type","url","proxy"]});Ext.define("OpenEMap.data.Servers",{extend:Ext.data.Store,model:"OpenEMap.model.Server",storeId:"servers",singelton:!0,constructor:function(a){a=Ext.apply(this,a);this.callParent([a])}});
Ext.define("OpenEMap.config.Parser",{constructor:function(a){Ext.apply(this,a);this.callParent(arguments)},parse:function(a){var b={fallThrough:!0,controls:["Navigation","KeyboardDefaults"],projection:"EPSG:3006",resolutions:[280,140,70,28,14,7,4.2,2.8,1.4,0.56,0.28,0.14,0.112],extent:[608114,6910996,641846,6932596],maxExtent:[487E3,6887E3,749144,7149144],units:"m",municipalities:["Sundvsall","Timr\u00e5","Kramfors","\u00d6rnsk\u00f6ldsvik","H\u00e4rn\u00f6sand"]};b.resolutions=a.resolutions||b.resolutions;
b.units=a.units||b.units;b.projection=a.projection||b.projection;b.maxExtent=a.maxExtent;b.extent=a.extent;b.municipalities=a.municipalities||b.municipalities;b.controls=b.controls.map(this.createControl);Ext.apply(b,a.map);c=a.layers.map(this.transformLayer);a=this.parseLayerTree(c);var c=this.extractLayers(a);b.allOverlays=!c.some(this.isBaseLayer,this);b.layers=c.map(function(a){return a.layer});b.layers=b.layers.filter(function(a){return a});b=new OpenLayers.Map(b);b.layerTree=a;b.layerSwitcherLayerTree=
this.getLayerSwitcherLayers(a);return b},parseLayerTree:function(a){a.forEach(this.iterateLayers,this);return a},getLayerSwitcherLayers:function(a){return a.filter(function(a){return a.layers||this.isWMSLayer(a)&&!this.isBaseLayer(a)?!0:!1},this)},extractLayers:function(a){var b=a.filter(function(a){return!a.layers});a=a.filter(function(a){return a.layers}).map(function(a){return a.layers});a=[].concat.apply([],a);a=b.concat(a);a.reverse();return a},extractPlainLayers:function(a){for(var b=[],c=0,
d=a.length;c<d;c++)b.push(a[c]),a[c].layers&&(b=b.concat(this.extractPlainLayers(a[c].layers)));return b},extractWFS:function(a){return a=a.filter(function(a){return a.wfs&&a.wfs.url})},extractNoWFS:function(a){return a=a.filter(function(a){return!(a.wfs&&a.wfs.url)})},extractWMS:function(a){return a=a.filter(function(a){return a.wms&&a.wms.url})},extractClickableLayers:function(a){return a=a.filter(function(a){return a.clickable&&a.queryable})},extractVisibleLayers:function(a){return a=a.filter(function(a){return a.layer&&
a.layer.visibility})},extractVector:function(a){a=this.extractLayers(a);return a=a.filter(function(a){return a.vector})},extractBaseLayers:function(a){a=this.extractLayers(a);return a=a.filter(function(a){return a.isBaseLayer})},extractPopupLayers:function(a){a=this.extractLayers(a);a=a.filter(function(a){return a.idAttribute&&a.popupTextAttribute?!0:!1});return a=a.filter(function(a){return a.visibility})},getOptions:function(a){if(a.wms)return a.wms.options;if(a.osm)return a.osm.options;if(a.google)return a.google.options;
if(a.bing)return a.bing.options},isOpenLayersLayer:function(a){return a.wms||a.osm||a.google||a.bing?!0:!1},isBaseLayer:function(a){return(a=this.getOptions(a))&&a.isBaseLayer?!0:!1},createControl:function(a){return a.constructor==String?new OpenLayers.Control[a]:new OpenLayers.Control[a.type](a.options)},isWMSLayer:function(a){return a.wms?!0:!1},transformLayer:function(a){a.url&&(a.wms={url:a.url,params:a.params,options:a.options});return a},createLayer:function(a){if(a.wms)return new OpenLayers.Layer.WMS(a.name,
a.wms.url,a.wms.params,a.wms.options);if(a.osm)return new OpenLayers.Layer.OSM(a.name,a.osm.url,a.osm.options);if(a.google)return new OpenLayers.Layer.Google(a.name,a.google.options);if(a.bing)return new OpenLayers.Layer.Bing(Ext.apply({name:a.name},a.bing.options));throw Error("Unknown layer type");},iterateLayers:function(a){a.text=a.name;a.checked=a.wms&&a.wms.options&&a.wms.options.visibility?a.wms.options.visibility:!1;if("undefined"!==typeof a.serverId&&""!==a.serverId){var b=this.serverStore.getById(a.serverId);
if(b){if(a.wms&&!a.wms.url){var c="/wms";a.wms.gwc&&(c="/gwc/service/wms");a.wms.url=b.get("url")+c}a.wfs&&!a.wfs.url&&(a.wfs.url=b.get("url"))}}this.isOpenLayersLayer(a)&&(a.layer=this.createLayer(a),a.layer.queryable=a.queryable?a.queryable:!1);a.layers&&"[object Array]"===Object.prototype.toString.call(a.layers)&&0<a.layers.length?(a.isGroupLayer=!0,a.expanded=void 0===a.expanded?!0:a.expanded,a.layers.forEach(arguments.callee,this)):a.leaf=!0}});
Ext.define("OpenEMap.form.ZoomSelector",{extend:Ext.form.ComboBox,emptyText:"Zoom Level",listConfig:{getInnerTpl:function(){return"1: {scale:round(0)}"}},width:120,editable:!1,triggerAction:"all",queryMode:"local",initComponent:function(){this.store=Ext.create("GeoExt.data.ScaleStore",{map:this.map});this.listeners={select:{fn:function(a,b){this.map.zoomTo(b[0].get("level"))},scope:this}};this.map.events.register("zoomend",this,function(){var a=this.store.queryBy(function(a){return this.map.getZoom()==
a.data.level});0<a.length?(a=a.items[0],this.setValue("1 : "+parseInt(a.data.scale))):zoomSelector.rendered&&this.clearValue()});this.callParent(arguments)}});Ext.define("OpenEMap.OpenLayers.Control.ModifyFeature",{});
OpenLayers.Control.ModifyFeature=OpenLayers.Class(OpenLayers.Control,{bySegment:!1,documentDrag:!1,geometryTypes:null,clickout:!0,toggle:!0,standalone:!1,layer:null,feature:null,vertex:null,vertices:null,virtualVertices:null,handlers:null,deleteCodes:null,virtualStyle:null,dragHandleStyle:null,radiusHandleStyle:null,vertexRenderIntent:null,mode:null,createVertices:!0,modified:!1,radiusHandle:null,dragHandle:null,onModificationStart:function(){},onModification:function(){},onModificationEnd:function(){},
initialize:function(a,b){b=b||{};this.layer=a;this.vertices=[];this.virtualVertices=[];this.virtualStyle=OpenLayers.Util.extend({},this.layer.style||this.layer.styleMap.createSymbolizer(null,b.vertexRenderIntent));this.virtualStyle.fillOpacity=0.3;this.virtualStyle.strokeOpacity=0.3;this.deleteCodes=[46,68];this.mode=OpenLayers.Control.ModifyFeature.RESHAPE;OpenLayers.Control.prototype.initialize.apply(this,[b]);OpenLayers.Util.isArray(this.deleteCodes)||(this.deleteCodes=[this.deleteCodes]);var c=
this,d={documentDrag:this.documentDrag,setEvent:function(a){var b=c.feature;c._lastVertex=b?b.layer.getFeatureFromEvent(a):null;OpenLayers.Handler.Drag.prototype.setEvent.apply(this,arguments)},stopDown:!1};this.handlers={keyboard:new OpenLayers.Handler.Keyboard(this,{keydown:this.handleKeypress}),drag:new OpenLayers.Handler.Drag(this,{down:function(){this.vertex=null;var a=this.layer.getFeatureFromEvent(this.handlers.drag.evt);a?this.dragStart(a):this.clickout&&(this._unselect=this.feature)},move:function(a){delete this._unselect;
this.vertex&&this.dragVertex(this.vertex,a)},up:function(){this.handlers.drag.stopDown=!1;this._unselect&&(this.unselectFeature(this._unselect),delete this._unselect)},done:function(){this.vertex&&this.dragComplete(this.vertex)}},d)};if(this.bySegment){if(!window.rbush)throw Error("The rbush library is required");if(OpenLayers.Control.ModifyFeature.BySegment)OpenLayers.Util.extend(this,OpenLayers.Control.ModifyFeature.BySegment);else throw Error("OpenLayers.Control.ModifyFeature.BySegment is missing from the build");
}},createVirtualVertex:function(a,b){var c=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point((a.x+b.x)/2,(a.y+b.y)/2),null,this.virtualStyle);c._sketch=!0;return c},destroy:function(){this.map&&this.map.events.un({removelayer:this.handleMapEvents,changelayer:this.handleMapEvents,scope:this});this.layer=null;OpenLayers.Control.prototype.destroy.apply(this,[])},activate:function(){return OpenLayers.Control.prototype.activate.apply(this,arguments)?(this.moveLayerToTop(),this.map.events.on({removelayer:this.handleMapEvents,
changelayer:this.handleMapEvents,scope:this}),this._lastVertex=null,this.handlers.keyboard.activate()&&this.handlers.drag.activate()):!1},deactivate:function(){var a=!1;OpenLayers.Control.prototype.deactivate.apply(this,arguments)&&(this.moveLayerBack(),this.map.events.un({removelayer:this.handleMapEvents,changelayer:this.handleMapEvents,scope:this}),this.layer.removeFeatures(this.vertices,{silent:!0}),this.layer.removeFeatures(this.virtualVertices,{silent:!0}),this.vertices=[],this.handlers.drag.deactivate(),
this.handlers.keyboard.deactivate(),(a=this.feature)&&(a.geometry&&a.layer)&&this.unselectFeature(a),a=!0);return a},beforeSelectFeature:function(a){return this.layer.events.triggerEvent("beforefeaturemodified",{feature:a})},selectFeature:function(a){if(!(this.feature===a||this.geometryTypes&&-1==OpenLayers.Util.indexOf(this.geometryTypes,a.geometry.CLASS_NAME))){!1!==this.beforeSelectFeature(a)&&(this.feature&&this.unselectFeature(this.feature),this.feature=a,this.layer.selectedFeatures.push(a),
this.layer.drawFeature(a,"select"),this.modified=!1,this.resetVertices(),this.onModificationStart(this.feature));var b=a.modified;if(a.geometry&&(!b||!b.geometry))this._originalGeometry=a.geometry.clone()}},unselectFeature:function(a){this.layer.removeFeatures(this.vertices,{silent:!0});this.vertices=[];this.layer.destroyFeatures(this.virtualVertices,{silent:!0});this.virtualVertices=[];this.dragHandle&&(this.layer.destroyFeatures([this.dragHandle],{silent:!0}),delete this.dragHandle);this.radiusHandle&&
(this.layer.destroyFeatures([this.radiusHandle],{silent:!0}),delete this.radiusHandle);this.layer.drawFeature(this.feature,"default");this.feature=null;OpenLayers.Util.removeItem(this.layer.selectedFeatures,a);this.onModificationEnd(a);this.layer.events.triggerEvent("afterfeaturemodified",{feature:a,modified:this.modified});this.modified=!1},dragStart:function(a){var b="OpenLayers.Geometry.Point"==a.geometry.CLASS_NAME;if(!this.standalone&&(!a._sketch&&b||!a._sketch))this.toggle&&this.feature===a&&
(this._unselect=a),this.selectFeature(a);if(this.feature&&(a._sketch||b&&a===this.feature))this.vertex=a,this.handlers.drag.stopDown=!0},dragVertex:function(a,b){var c=this.map.getLonLatFromViewPortPx(b),d=a.geometry;d.move(c.lon-d.x,c.lat-d.y);this.modified=!0;"OpenLayers.Geometry.Point"==this.feature.geometry.CLASS_NAME?this.layer.events.triggerEvent("vertexmodified",{vertex:a.geometry,feature:this.feature,pixel:b}):(a._index?(-1==a._index&&(a._index=OpenLayers.Util.indexOf(a.geometry.parent.components,
a._next)),a.geometry.parent.addComponent(a.geometry,a._index),delete a._index,OpenLayers.Util.removeItem(this.virtualVertices,a),this.vertices.push(a)):a==this.dragHandle?(this.layer.removeFeatures(this.vertices,{silent:!0}),this.vertices=[],this.radiusHandle&&(this.layer.destroyFeatures([this.radiusHandle],{silent:!0}),this.radiusHandle=null)):a!==this.radiusHandle&&this.layer.events.triggerEvent("vertexmodified",{vertex:a.geometry,feature:this.feature,pixel:b}),0<this.virtualVertices.length&&(this.layer.destroyFeatures(this.virtualVertices,
{silent:!0}),this.virtualVertices=[]),this.layer.drawFeature(this.feature,this.standalone?void 0:"select"));this.layer.drawFeature(a)},dragComplete:function(){this.resetVertices();this.setFeatureState();this.onModification(this.feature);this.layer.events.triggerEvent("featuremodified",{feature:this.feature})},setFeatureState:function(){if(this.feature.state!=OpenLayers.State.INSERT&&this.feature.state!=OpenLayers.State.DELETE&&(this.feature.state=OpenLayers.State.UPDATE,this.modified&&this._originalGeometry)){var a=
this.feature;a.modified=OpenLayers.Util.extend(a.modified,{geometry:this._originalGeometry});delete this._originalGeometry}},resetVertices:function(){0<this.vertices.length&&(this.layer.removeFeatures(this.vertices,{silent:!0}),this.vertices=[]);0<this.virtualVertices.length&&(this.layer.removeFeatures(this.virtualVertices,{silent:!0}),this.virtualVertices=[]);this.dragHandle&&(this.layer.destroyFeatures([this.dragHandle],{silent:!0}),this.dragHandle=null);this.radiusHandle&&(this.layer.destroyFeatures([this.radiusHandle],
{silent:!0}),this.radiusHandle=null);this.feature&&"OpenLayers.Geometry.Point"!=this.feature.geometry.CLASS_NAME&&(this.mode&OpenLayers.Control.ModifyFeature.DRAG&&this.collectDragHandle(),this.mode&(OpenLayers.Control.ModifyFeature.ROTATE|OpenLayers.Control.ModifyFeature.RESIZE)&&this.collectRadiusHandle(),this.mode&OpenLayers.Control.ModifyFeature.RESHAPE&&(this.mode&OpenLayers.Control.ModifyFeature.RESIZE||this.collectVertices()))},handleKeypress:function(a){var b=a.keyCode;if(this.feature&&-1!=
OpenLayers.Util.indexOf(this.deleteCodes,b)&&(b=this._lastVertex)&&-1!=OpenLayers.Util.indexOf(this.vertices,b)&&!this.handlers.drag.dragging&&b.geometry.parent)b.geometry.parent.removeComponent(b.geometry),this.layer.events.triggerEvent("vertexremoved",{vertex:b.geometry,feature:this.feature,pixel:a.xy}),this.layer.drawFeature(this.feature,this.standalone?void 0:"select"),this.modified=!0,this.resetVertices(),this.setFeatureState(),this.onModification(this.feature),this.layer.events.triggerEvent("featuremodified",
{feature:this.feature})},collectVertices:function(){function a(c){var d,e,f;if("OpenLayers.Geometry.Point"==c.CLASS_NAME)e=new OpenLayers.Feature.Vector(c),e._sketch=!0,e.renderIntent=b.vertexRenderIntent,b.vertices.push(e);else{f=c.components.length;"OpenLayers.Geometry.LinearRing"==c.CLASS_NAME&&(f-=1);for(d=0;d<f;++d)e=c.components[d],"OpenLayers.Geometry.Point"==e.CLASS_NAME?(e=new OpenLayers.Feature.Vector(e),e._sketch=!0,e.renderIntent=b.vertexRenderIntent,b.vertices.push(e)):a(e);if(b.createVertices&&
"OpenLayers.Geometry.MultiPoint"!=c.CLASS_NAME){d=0;for(f=c.components.length;d<f-1;++d){e=c.components[d];var g=c.components[d+1];"OpenLayers.Geometry.Point"==e.CLASS_NAME&&"OpenLayers.Geometry.Point"==g.CLASS_NAME&&(e=b.createVirtualVertex.call(b,e,g),e.geometry.parent=c,e._index=d+1,b.virtualVertices.push(e))}}}}this.vertices=[];this.virtualVertices=[];var b=this;a.call(this,this.feature.geometry);this.layer.addFeatures(this.virtualVertices,{silent:!0});this.layer.addFeatures(this.vertices,{silent:!0})},
collectDragHandle:function(){var a=this.feature.geometry,b=a.getBounds().getCenterLonLat(),b=new OpenLayers.Geometry.Point(b.lon,b.lat),c=new OpenLayers.Feature.Vector(b,null,this.dragHandleStyle);b.move=function(b,c){OpenLayers.Geometry.Point.prototype.move.call(this,b,c);a.move(b,c)};c._sketch=!0;this.dragHandle=c;this.dragHandle.renderIntent=this.vertexRenderIntent;this.layer.addFeatures([this.dragHandle],{silent:!0})},collectRadiusHandle:function(){var a=this.feature.geometry,b=a.getBounds(),
c=b.getCenterLonLat(),d=new OpenLayers.Geometry.Point(c.lon,c.lat),b=new OpenLayers.Geometry.Point(b.right,b.bottom),c=new OpenLayers.Feature.Vector(b,null,this.radiusHandleStyle),e=this.mode&OpenLayers.Control.ModifyFeature.RESIZE,f=this.mode&OpenLayers.Control.ModifyFeature.RESHAPE,g=this.mode&OpenLayers.Control.ModifyFeature.ROTATE;b.move=function(b,c){OpenLayers.Geometry.Point.prototype.move.call(this,b,c);var j=this.x-d.x,l=this.y-d.y,m=j-b,n=l-c;if(g){var p=Math.atan2(n,m),p=Math.atan2(l,j)-
p,p=p*(180/Math.PI);a.rotate(p,d)}if(e){var q;f?(l/=n,q=j/m/l):(m=Math.sqrt(m*m+n*n),l=Math.sqrt(j*j+l*l)/m);a.resize(l,d,q)}};c._sketch=!0;this.radiusHandle=c;this.radiusHandle.renderIntent=this.vertexRenderIntent;this.layer.addFeatures([this.radiusHandle],{silent:!0})},setMap:function(a){this.handlers.drag.setMap(a);OpenLayers.Control.prototype.setMap.apply(this,arguments)},handleMapEvents:function(a){("removelayer"==a.type||"order"==a.property)&&this.moveLayerToTop()},moveLayerToTop:function(){var a=
Math.max(this.map.Z_INDEX_BASE.Feature-1,this.layer.getZIndex())+1;this.layer.setZIndex(a)},moveLayerBack:function(){var a=this.layer.getZIndex()-1;a>=this.map.Z_INDEX_BASE.Feature?this.layer.setZIndex(a):this.map.setLayerZIndex(this.layer,this.map.getLayerIndex(this.layer))},CLASS_NAME:"OpenLayers.Control.ModifyFeature"});OpenLayers.Control.ModifyFeature.RESHAPE=1;OpenLayers.Control.ModifyFeature.RESIZE=2;OpenLayers.Control.ModifyFeature.ROTATE=4;OpenLayers.Control.ModifyFeature.DRAG=8;
Ext.define("OpenEMap.OpenLayers.Control.DynamicMeasure",{});
OpenLayers.Control.DynamicMeasure=OpenLayers.Class(OpenLayers.Control.Measure,{accuracy:2,persist:!1,styles:null,positions:null,maxSegments:1,maxHeadings:1,layerSegmentsOptions:void 0,layerHeadingOptions:null,layerLengthOptions:void 0,layerAreaOptions:void 0,drawingLayer:null,multi:!1,layerSegments:null,layerLength:null,layerArea:null,dynamicObj:null,isArea:null,initialize:function(a,b){b=b||{};b.handlerOptions=OpenLayers.Util.extend({persist:!b.drawingLayer},b.handlerOptions);b.drawingLayer&&!("multi"in
b.handlerOptions)&&(b.handlerOptions.multi=b.multi);if(b.drawingLayer){var c=b.drawingLayer.styleMap&&b.drawingLayer.styleMap.styles.temporary;c&&(b.handlerOptions.layerOptions=OpenLayers.Util.applyDefaults(b.handlerOptions.layerOptions,{styleMap:new OpenLayers.StyleMap({"default":c})}))}var d=b.styles||{};b.styles=d;var e=OpenLayers.Control.DynamicMeasure.styles;if(!b.handlerOptions.layerOptions||!b.handlerOptions.layerOptions.styleMap){var c=OpenLayers.Util.applyDefaults(d.Point,e.Point),f=OpenLayers.Util.applyDefaults(d.Line,
e.Line),d=OpenLayers.Util.applyDefaults(d.Polygon,e.Polygon),c=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:{Point:c,Line:f,Polygon:d}})]});b.handlerOptions=b.handlerOptions||{};b.handlerOptions.layerOptions=b.handlerOptions.layerOptions||{};b.handlerOptions.layerOptions.styleMap=new OpenLayers.StyleMap({"default":c})}b.positions=OpenLayers.Util.applyDefaults(b.positions,OpenLayers.Control.DynamicMeasure.positions);b.callbacks=b.callbacks||{};b.drawingLayer&&OpenLayers.Util.applyDefaults(b.callbacks,
{create:function(a,b){this.callbackCreate(a,b);this.drawingLayer.events.triggerEvent("sketchstarted",{vertex:a,feature:b})},modify:function(a,b){this.callbackModify(a,b);this.drawingLayer.events.triggerEvent("sketchmodified",{vertex:a,feature:b})},done:function(a){this.callbackDone(a);this.drawFeature(a)}});OpenLayers.Util.applyDefaults(b.callbacks,{create:this.callbackCreate,point:this.callbackPoint,cancel:this.callbackCancel,done:this.callbackDone,modify:this.callbackModify,redo:this.callbackRedo,
undo:this.callbackUndo});var g=document.onselectstart?document.onselectstart:OpenLayers.Function.True,c=OpenLayers.Class(a,{down:function(b){document.onselectstart=OpenLayers.Function.False;return a.prototype.down.apply(this,arguments)},up:function(b){document.onselectstart=g;return a.prototype.up.apply(this,arguments)},move:function(b){this.mouseDown||(document.onselectstart=g);return a.prototype.move.apply(this,arguments)},mouseout:function(b){OpenLayers.Util.mouseLeft(b,this.map.viewPortDiv)&&
this.mouseDown&&(document.onselectstart=g);return a.prototype.mouseout.apply(this,arguments)},finalize:function(){document.onselectstart=g;a.prototype.finalize.apply(this,arguments)}},{undo:function(){var b=a.prototype.undo.call(this);b&&this.callback("undo",[this.point.geometry,this.getSketch(),!0]);return b},redo:function(){var b=a.prototype.redo.call(this);b&&this.callback("redo",[this.point.geometry,this.getSketch(),!0]);return b}});OpenLayers.Control.Measure.prototype.initialize.call(this,c,
b);this.isArea=void 0!==a.prototype.polygon},destroy:function(){this.deactivate();OpenLayers.Control.Measure.prototype.destroy.apply(this,arguments)},draw:function(){},activate:function(){var a=OpenLayers.Control.Measure.prototype.activate.apply(this,arguments);if(a){this.dynamicObj={};var b=this.styles||{},c=OpenLayers.Control.DynamicMeasure.styles,d=this,e=function(a,e){if(null===e)return null;var h=OpenLayers.Util.extend({displayInLayerSwitcher:!1,calculateInRange:OpenLayers.Function.True},e);
h.styleMap||(h.styleMap=new OpenLayers.StyleMap({"default":OpenLayers.Util.applyDefaults(b[a],c[a])}));h=new OpenLayers.Layer.Vector(d.CLASS_NAME+" "+a,h);d.map.addLayer(h);d.map.setLayerIndex(h,99);return h};this.layerSegments=e("labelSegments",this.layerSegmentsOptions);this.layerHeading=e("labelHeading",this.layerHeadingOptions);this.layerLength=e("labelLength",this.layerLengthOptions);this.isArea&&(this.layerArea=e("labelArea",this.layerAreaOptions))}return a},deactivate:function(){var a=OpenLayers.Control.Measure.prototype.deactivate.apply(this,
arguments);a&&(this.layerSegments&&this.layerSegments.destroy(),this.layerLength&&this.layerLength.destroy(),this.layerHeading&&this.layerHeading.destroy(),this.layerArea&&this.layerArea.destroy(),this.layerArea=this.layerHeading=this.layerLength=this.layerSegments=this.dynamicObj=null);return a},setImmediate:function(a){this.immediate=a},callbackCreate:function(){var a=this.dynamicObj;a.drawing=!1;a.freehand=!1;a.fromIndex=0;a.countSegments=0},callbackCancel:function(){this.destroyLabels()},callbackDone:function(a){var b=
new OpenLayers.Feature.Vector(a);this.mapPanel.measureLayer.addFeatures([b.clone()]);b=function(a){return a.clone()};this.layerArea&&this.mapPanel.measureLayerArea.addFeatures(this.layerArea.features.map(b));this.mapPanel.measureLayerLength.addFeatures(this.layerLength.features.map(b));this.mapPanel.measureLayerSegments.addFeatures(this.layerSegments.features.map(b));this.measureComplete(a);this.persist||this.destroyLabels()},drawFeature:function(a){a=new OpenLayers.Feature.Vector(a);!1!==this.drawingLayer.events.triggerEvent("sketchcomplete",
{feature:a})&&(a.state=OpenLayers.State.INSERT,this.featureAdded&&this.featureAdded(a),this.events.triggerEvent("featureadded",{feature:a}))},destroyLabels:function(){this.layerSegments&&this.layerSegments.destroyFeatures(null,{silent:!0});this.layerLength&&this.layerLength.destroyFeatures(null,{silent:!0});this.layerHeading&&this.layerHeading.destroyFeatures(null,{silent:!0});this.layerArea&&this.layerArea.destroyFeatures(null,{silent:!0})},callbackPoint:function(a,b){var c=this.dynamicObj;c.drawing||
this.destroyLabels();this.handler.freehandMode(this.handler.evt)?c.freehand||(c.fromIndex=this.handler.getCurrentPointIndex()-1,c.freehand=!0,c.countSegments++):(c.fromIndex=this.handler.getCurrentPointIndex()-1,c.freehand=!1,c.countSegments++);this.measurePartial(a,b);c.drawing=!0},callbackUndo:function(a,b){var c=this,d=function(a){if(a){var b=a.features,d=b.length-1,h=b[d],k=h.attributes.from,j=c.handler.getCurrentPointIndex();k>=j&&(k=c.dynamicObj,a.destroyFeatures(h),h=b[d-1],k.fromIndex=h.attributes.from,
k.countSegments=b.length)}};d(this.layerSegments);d(this.layerHeading);this.callbackModify(a,b,!0)},callbackRedo:function(a,b){var c=this.handler.line.geometry,d=this.handler.getCurrentPointIndex(),e=this.dynamicObj;this.showLabelSegment(e.countSegments,e.fromIndex,c.components.slice(e.fromIndex,d));e.fromIndex=this.handler.getCurrentPointIndex()-1;e.countSegments++;this.callbackModify(a,b,!0)},callbackModify:function(a,b,c){this.immediate&&this.measureImmediate(a,b,c);var d=this.dynamicObj;if(!1!==
d.drawing){var e=this.handler.line.geometry;c=this.handler.getCurrentPointIndex();!this.handler.freehandMode(this.handler.evt)&&d.freehand&&(d.fromIndex=c-1,d.freehand=!1,d.countSegments++);var f=this.getBestLength(e);if(f[0]){var g=this.positions,h={center:function(){var c=b.geometry.getBounds().clone();c.extend(a);c=c.getCenterLonLat();return[c.lon,c.lat]},initial:function(){var a=e.components[0];return[a.x,a.y]},start:function(){var a=e.components[d.fromIndex];return[a.x,a.y]},middle:function(){var b=
e.components[d.fromIndex];return[(b.x+a.x)/2,(b.y+a.y)/2]},end:function(){return[a.x,a.y]}};this.layerLength&&this.showLabel(this.layerLength,1,0,f,h[g.labelLength](),1);this.isArea&&(this.layerArea&&this.showLabel(this.layerArea,1,0,this.getBestArea(b.geometry),h[g.labelArea](),1),this.showLabelSegment(1,0,[e.components[0],e.components[c]])&&d.countSegments++);this.showLabelSegment(d.countSegments,d.fromIndex,e.components.slice(d.fromIndex,c+1))}}},showLabelSegment:function(a,b,c){var d=this.layerSegments,
e=this.layerHeading;if(!d&&!e)return!1;for(var f=[],g=c.length,h=0;h<g;h++)f.push(c[h].clone());var k=f[0],j=f[g-1],h=this.getBestLength(new OpenLayers.Geometry.LineString(f));c=this.positions;f={start:function(){return[k.x,k.y]},middle:function(){return[(k.x+j.x)/2,(k.y+j.y)/2]},end:function(){return[j.x,j.y]}};g=!1;d&&(g=this.showLabel(d,a,b,h,f[c.labelSegments](),this.maxSegments));e&&0<h[0]&&(d=90-180*Math.atan2(j.y-k.y,j.x-k.x)/Math.PI,0>d&&(d+=360),g=g||this.showLabel(e,a,b,[d,"\u00b0"],f[c.labelHeading](),
this.maxHeadings));return g},showLabel:function(a,b,c,d,e,f){var g;g=a.features;if(g.length<b){if(0===d[0])return!1;b=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(e[0],e[1]),{from:c});this.setMesureAttributes(b.attributes,d);a.addFeatures([b]);null!==f&&(d=g.length-f-1,0<=d&&(g=g[d],g.style={display:"none"},a.drawFeature(g)));return!0}b=g[b-1];c=b.geometry;c.x=e[0];c.y=e[1];c.clearBounds();this.setMesureAttributes(b.attributes,d);a.drawFeature(b);null!==f&&(d=g.length-f,0<=d&&(g=g[d],
g.style&&(delete g.style,a.drawFeature(g))));return!1},setMesureAttributes:function(a,b){a.measure=OpenLayers.Number.format(b[0].toFixed(this.accuracy),null);a.units=b[1]},CLASS_NAME:"OpenLayers.Control.DynamicMeasure"});
OpenLayers.Control.DynamicMeasure.styles={Point:{pointRadius:0,graphicName:"square",fillColor:"white",fillOpacity:1,strokeWidth:1,strokeOpacity:1,strokeColor:"#333333"},Line:{strokeWidth:2,strokeOpacity:1,strokeColor:"#666666",strokeDashstyle:"dash"},Polygon:{strokeWidth:2,strokeOpacity:1,strokeColor:"#666666",strokeDashstyle:"solid",fillColor:"white",fillOpacity:0.3},labelSegments:{pointRadius:0,label:"${measure} ${units}",fontSize:"12px",fontColor:"#800517",fontFamily:"Verdana",labelOutlineColor:"#eeeeee",
labelAlign:"cm",labelOutlineWidth:2},labelLength:{pointRadius:0,label:"${measure} ${units}\n",fontSize:"12px",fontWeight:"bold",fontColor:"#800517",fontFamily:"Verdana",labelOutlineColor:"#eeeeee",labelAlign:"lb",labelOutlineWidth:3},labelArea:{pointRadius:0,label:"${measure}\n${units}\u00b2\n",fontSize:"11px",fontWeight:"bold",fontColor:"#800517",fontFamily:"Verdana",labelOutlineColor:"#dddddd",labelAlign:"cm",labelOutlineWidth:3},labelHeading:{pointRadius:0,label:"${measure} ${units}",fontSize:"11px",
fontColor:"#800517",fontFamily:"Verdana",labelOutlineColor:"#dddddd",labelAlign:"cm",labelOutlineWidth:3}};OpenLayers.Control.DynamicMeasure.positions={labelSegments:"middle",labelLength:"end",labelArea:"center",labelHeading:"start"};
Ext.define("OpenEMap.Client",{version:"1.5.0",map:null,drawLayer:null,configure:function(a,b){b=Ext.apply({},b);this.initialConfig=Ext.clone(a);this.initialOptions=Ext.clone(b);Ext.tip.QuickTipManager.init();this.map=Ext.create("OpenEMap.config.Parser").parse(a);this.gui=Ext.create("OpenEMap.Gui",{config:a,gui:b.gui,map:this.map,client:this,orginalConfig:this.initialConfig});this.mapPanel=this.gui.mapPanel;this.drawLayer=this.gui.mapPanel.drawLayer;this.gui.controlToActivate&&this.gui.controlToActivate.activate()},
getConfig:function(a){return this.gui.mapLayers.getConfig(a)},encode:function(a){return JSON.stringify(this.mapPanel.encode(a))},addGeoJSON:function(a){a=(new OpenLayers.Format.GeoJSON).read(a,"Feature");a.attributes.config&&(a=Ext.create("OpenEMap.ObjectFactory").create(a.attributes.config,a.attributes));this.drawLayer.addFeatures([a])},setSketchStyleMap:function(a){this.map.controls.forEach(function(b){b instanceof OpenLayers.Control.DrawFeature&&(b.handler.layerOptions.styleMap=a,b.handler.layer&&
(b.handler.layer.styleMap=a))})},toggleEdgeLabels:function(a,b){var c=a||{};if(isNaN(b)||parseInt(Number(b))!=b||isNaN(parseInt(b,10)))b=2;var d=function(){this.labelLayer&&this.labelLayer.destroyFeatures();var a=this.drawLayer.features.map(function(a){a=a.geometry;if("OpenLayers.Geometry.Polygon"!=a.CLASS_NAME)return[];var d=a.components[0];return d.components.slice(0,d.components.length-1).map(function(a,e){var f=d.components[e].clone(),l=d.components[e+1].clone(),l=new OpenLayers.Geometry.LineString([f,
l]),f=l.getCentroid({weighted:!0}),l=Ext.applyIf(Ext.clone(c),{label:l.getLength().toFixed(b).toString()+" m",strokeColor:"#000000",strokeWidth:3,labelAlign:"cm"});return new OpenLayers.Feature.Vector(f,null,l)})});0<a.length&&(a=a.reduce(function(a,b){return a.concat(b)}),this.labelLayer.addFeatures(a))};null===this.labelLayer&&(this.labelLayer=new OpenLayers.Layer.Vector,this.map.addLayer(this.labelLayer),this.drawLayer.events.on({featuremodified:d,vertexmodified:d,featuresadded:d,featuresremoved:d,
scope:this}));d.apply(this)},addPopupLayer:function(a,b,c,d,e,f,g,h,k,j){a||Ext.Error.raise("GeoJSON-string is null.");b||(b="VectorLayer");c||(c="id");d||(d="popupText");e||(e="");f||(f="");g||(g=null);k||(k="EPSG:3006");Proj4js.defs[k]||Ext.Error.raise("Unknown coordinate system: "+k+"\nAdd coordinate system using proj4.defs('Name', 'Definition')");null===j&&(j=!0);var l=new OpenLayers.Format.GeoJSON;l.internalProjection=new OpenLayers.Projection(this.map.projection);l.externalProjection=new OpenLayers.Projection(k);
(a=l.read(a,"FeatureCollection"))||Ext.Error.raise("Can not read features from GeoJSON due to malformed syntax.");var l=(l=OpenLayers.Util.getParameters(window.location.href).renderer)?[l]:OpenLayers.Layer.Vector.prototype.renderers,m=new OpenLayers.Layer.Vector(b,{renderers:l,idAttribute:c,popupTextAttribute:d,popupTextPrefix:e,popupTextSuffix:f,popupTitleAttribute:g});m||Ext.Error.raise("Can not create popup layer: "+b);h&&(m.styleMap=h);this.map.addLayer(m);m.addFeatures(a);var n=new OpenLayers.Bounds;
a.forEach(function(a){a.renderIntent="default";n.extend(a.geometry.getBounds());m.drawFeature(a)});m.popup=[];j&&m.map.zoomToExtent(n);return m},removePopupLayer:function(a){a.popup&&(a.popup.forEach(function(a){a.destroy()}),a.popup=[]);mapClient.map.removeLayer(a)},showPopupFeaturePopup:function(a,b){a.popup&&a.popup.forEach(function(a){a.destroy()});var c=a.popupTextPrefix+b.attributes[a.popupTextAttribute]+a.popupTextSuffix,d="";a.popupTitleAttribute&&(d=b.attributes[a.popupTitleAttribute]);c=
new OpenEMap.view.PopupResults({mapPanel:this.gui.mapPanel,location:b,popupText:c,feature:b,title:d});c.show();a.popup.push(c)},showPopupFeature:function(a,b,c){a||Ext.Error.raise("Popup layer undefined.");b||Ext.Error.raise("Feature id undefined.");var d=a.getFeaturesByAttribute(a.idAttribute,b);d?1==d.length?(Ext.create("OpenEMap.config.Parser").extractPopupLayers(a.map.layers).forEach(function(a){a.features.forEach(function(b){"select"==b.renderIntent&&(b.renderIntent="default",b.layer.drawFeature(b),
b.layer.map.events.triggerEvent("popupfeatureunselected",{layer:a,featureid:b.attributes[a.idAttribute]}))})}),this.showPopupFeaturePopup(a,d[0]),d[0].renderIntent="select",c&&(b=d[0].geometry.getCentroid(),d[0].layer.map.setCenter([b.x,b.y])),d[0].layer.drawFeature(d[0]),d[0].layer.map.events.triggerEvent("popupfeatureselected",{layer:a,featureid:d[0].attributes[a.idAttribute]})):Ext.Error.raise("More then one feature with specified id: "+b):Ext.Error.raise("No feature with specified id: "+b)},destroyPopupLayers:function(){var a=
Ext.create("OpenEMap.config.Parser").extractPopupLayers(this.map.layers);a&&a.forEach(function(a){this.removePopupLayer(a)})},destroy:function(){this.map&&(this.map.controls&&(this.map.controls.forEach(function(a){a.destroy()}),this.map.controls=null),this.map.layers&&this.destroyPopupLayers());this.gui&&this.gui.destroy()}});Ext.ns("OpenEMap");
Ext.apply(OpenEMap,{lmUser:"sundsvall",basePathMapFish:"/print/pdf",basePathLM:"/search/lm/",basePathES:"/search/es/",basePathImages:"resources/images/",basePathWMS:"/geoserver/wms",wmsURLs:{basePath:"/geoserver/wms",url:"https://extmaptest.sundsvall.se/geoserver/wms",getCapabilities:"https://extmaptest.sundsvall.se/getcapabilities/wms.xml"},basePathProxy:"/cgi-bin/proxy.py?url\x3d",wsUrls:{basePath:"/openemapadmin",configs:"/configs",adminconfigs:"/adminconfigs",servers:"settings/servers",layers:"layers/layers",
metadata:"geometadata/getmetadatabyid",metadata_abstract:"geometadata/getabstractbyid"}});Ext.apply(OpenEMap,{requestLM:function(a){a.url=OpenEMap.basePathLM+a.url+"\x26lmuser\x3d"+OpenEMap.lmUser;Ext.Ajax.request(a)}});OpenLayers.Layer.Vector.prototype.renderers=["Canvas","SVG","VML"];Ext.define("OpenEMap.locale.sv_SE.Gui",{override:"OpenEMap.Gui",objectConfigWindowTitle:"Objektkonfiguration"});
Ext.define("OpenEMap.locale.sv_SE.view.ObjectConfig",{override:"OpenEMap.view.ObjectConfig",typeLabel:"Typ",widthLabel:"Bredd",lengthLabel:"L\u00e4ngd",m1Label:"M1",m2Label:"M2",angleLabel:"Vinkel"});Ext.define("OpenEMap.Search",{constructor:function(){initConfig()},doSearch:function(){}});