Ext.data.JsonP.Ext_XTemplateCompiler({"tagname":"class","name":"Ext.XTemplateCompiler","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"XTemplateCompiler.js","href":"XTemplateCompiler.html#Ext-XTemplateCompiler"}],"private":true,"aliases":{},"alternateClassNames":[],"extends":"Ext.XTemplateParser","mixins":[],"requires":[],"uses":[],"members":[{"name":"$className","tagname":"property","owner":"Ext.Base","id":"property-S-className","meta":{"private":true}},{"name":"actionsRe","tagname":"property","owner":"Ext.XTemplateParser","id":"property-actionsRe","meta":{"private":true}},{"name":"aposRe","tagname":"property","owner":"Ext.XTemplateCompiler","id":"property-aposRe","meta":{"private":true}},{"name":"configMap","tagname":"property","owner":"Ext.Base","id":"property-configMap","meta":{"private":true}},{"name":"createArrayTest","tagname":"property","owner":"Ext.XTemplateCompiler","id":"property-createArrayTest","meta":{"private":true}},{"name":"defaultRe","tagname":"property","owner":"Ext.XTemplateParser","id":"property-defaultRe","meta":{"private":true}},{"name":"elseRe","tagname":"property","owner":"Ext.XTemplateParser","id":"property-elseRe","meta":{"private":true}},{"name":"initConfigList","tagname":"property","owner":"Ext.Base","id":"property-initConfigList","meta":{"private":true}},{"name":"initConfigMap","tagname":"property","owner":"Ext.Base","id":"property-initConfigMap","meta":{"private":true}},{"name":"intRe","tagname":"property","owner":"Ext.XTemplateCompiler","id":"property-intRe","meta":{"private":true}},{"name":"isInstance","tagname":"property","owner":"Ext.Base","id":"property-isInstance","meta":{"private":true}},{"name":"level","tagname":"property","owner":"Ext.XTemplateParser","id":"property-level","meta":{}},{"name":"newLineRe","tagname":"property","owner":"Ext.XTemplateCompiler","id":"property-newLineRe","meta":{"private":true}},{"name":"propNameRe","tagname":"property","owner":"Ext.XTemplateCompiler","id":"property-propNameRe","meta":{"private":true}},{"name":"propRe","tagname":"property","owner":"Ext.XTemplateParser","id":"property-propRe","meta":{"private":true}},{"name":"self","tagname":"property","owner":"Ext.Base","id":"property-self","meta":{"protected":true}},{"name":"tagRe","tagname":"property","owner":"Ext.XTemplateCompiler","id":"property-tagRe","meta":{"private":true}},{"name":"topRe","tagname":"property","owner":"Ext.XTemplateParser","id":"property-topRe","meta":{"private":true}},{"name":"useEval","tagname":"property","owner":"Ext.XTemplateCompiler","id":"property-useEval","meta":{"private":true}},{"name":"useFormat","tagname":"property","owner":"Ext.XTemplateCompiler","id":"property-useFormat","meta":{"private":true}},{"name":"useIndex","tagname":"property","owner":"Ext.XTemplateCompiler","id":"property-useIndex","meta":{"private":true}},{"name":"$onExtended","tagname":"property","owner":"Ext.Base","id":"static-property-S-onExtended","meta":{"private":true,"static":true}},{"name":"constructor","tagname":"method","owner":"Ext.XTemplateParser","id":"method-constructor","meta":{}},{"name":"addFn","tagname":"method","owner":"Ext.XTemplateCompiler","id":"method-addFn","meta":{"private":true}},{"name":"callOverridden","tagname":"method","owner":"Ext.Base","id":"method-callOverridden","meta":{"deprecated":{"text":"<p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"protected":true}},{"name":"callParent","tagname":"method","owner":"Ext.Base","id":"method-callParent","meta":{"protected":true}},{"name":"callSuper","tagname":"method","owner":"Ext.Base","id":"method-callSuper","meta":{"protected":true}},{"name":"compile","tagname":"method","owner":"Ext.XTemplateCompiler","id":"method-compile","meta":{"private":true}},{"name":"configClass","tagname":"method","owner":"Ext.Base","id":"method-configClass","meta":{"private":true}},{"name":"destroy","tagname":"method","owner":"Ext.Base","id":"method-destroy","meta":{"private":true}},{"name":"doCase","tagname":"method","owner":"Ext.XTemplateCompiler","id":"method-doCase","meta":{}},{"name":"doDefault","tagname":"method","owner":"Ext.XTemplateCompiler","id":"method-doDefault","meta":{}},{"name":"doElse","tagname":"method","owner":"Ext.XTemplateCompiler","id":"method-doElse","meta":{}},{"name":"doElseIf","tagname":"method","owner":"Ext.XTemplateCompiler","id":"method-doElseIf","meta":{}},{"name":"doEnd","tagname":"method","owner":"Ext.XTemplateCompiler","id":"method-doEnd","meta":{}},{"name":"doEval","tagname":"method","owner":"Ext.XTemplateCompiler","id":"method-doEval","meta":{}},{"name":"doExec","tagname":"method","owner":"Ext.XTemplateCompiler","id":"method-doExec","meta":{}},{"name":"doExpr","tagname":"method","owner":"Ext.XTemplateCompiler","id":"method-doExpr","meta":{}},{"name":"doFor","tagname":"method","owner":"Ext.XTemplateCompiler","id":"method-doFor","meta":{}},{"name":"doForEach","tagname":"method","owner":"Ext.XTemplateCompiler","id":"method-doForEach","meta":{}},{"name":"doIf","tagname":"method","owner":"Ext.XTemplateCompiler","id":"method-doIf","meta":{}},{"name":"doSwitch","tagname":"method","owner":"Ext.XTemplateCompiler","id":"method-doSwitch","meta":{}},{"name":"doTag","tagname":"method","owner":"Ext.XTemplateCompiler","id":"method-doTag","meta":{}},{"name":"doText","tagname":"method","owner":"Ext.XTemplateCompiler","id":"method-doText","meta":{}},{"name":"doTpl","tagname":"method","owner":"Ext.XTemplateParser","id":"method-doTpl","meta":{}},{"name":"evalTpl","tagname":"method","owner":"Ext.XTemplateCompiler","id":"method-evalTpl","meta":{"private":true}},{"name":"generate","tagname":"method","owner":"Ext.XTemplateCompiler","id":"method-generate","meta":{"private":true}},{"name":"getConfig","tagname":"method","owner":"Ext.Base","id":"method-getConfig","meta":{"private":true}},{"name":"getInitialConfig","tagname":"method","owner":"Ext.Base","id":"method-getInitialConfig","meta":{}},{"name":"hasConfig","tagname":"method","owner":"Ext.Base","id":"method-hasConfig","meta":{"private":true}},{"name":"initConfig","tagname":"method","owner":"Ext.Base","id":"method-initConfig","meta":{"chainable":true,"protected":true}},{"name":"onConfigUpdate","tagname":"method","owner":"Ext.Base","id":"method-onConfigUpdate","meta":{"private":true}},{"name":"parse","tagname":"method","owner":"Ext.XTemplateParser","id":"method-parse","meta":{"private":true}},{"name":"parseTag","tagname":"method","owner":"Ext.XTemplateCompiler","id":"method-parseTag","meta":{"private":true}},{"name":"setConfig","tagname":"method","owner":"Ext.Base","id":"method-setConfig","meta":{"chainable":true,"private":true}},{"name":"statics","tagname":"method","owner":"Ext.Base","id":"method-statics","meta":{"protected":true}},{"name":"addConfig","tagname":"method","owner":"Ext.Base","id":"static-method-addConfig","meta":{"private":true,"static":true}},{"name":"addInheritableStatics","tagname":"method","owner":"Ext.Base","id":"static-method-addInheritableStatics","meta":{"chainable":true,"private":true,"static":true}},{"name":"addMember","tagname":"method","owner":"Ext.Base","id":"static-method-addMember","meta":{"chainable":true,"private":true,"static":true}},{"name":"addMembers","tagname":"method","owner":"Ext.Base","id":"static-method-addMembers","meta":{"chainable":true,"static":true}},{"name":"addStatics","tagname":"method","owner":"Ext.Base","id":"static-method-addStatics","meta":{"chainable":true,"static":true}},{"name":"addXtype","tagname":"method","owner":"Ext.Base","id":"static-method-addXtype","meta":{"chainable":true,"private":true,"static":true}},{"name":"borrow","tagname":"method","owner":"Ext.Base","id":"static-method-borrow","meta":{"chainable":true,"private":true,"static":true}},{"name":"create","tagname":"method","owner":"Ext.Base","id":"static-method-create","meta":{"static":true}},{"name":"createAlias","tagname":"method","owner":"Ext.Base","id":"static-method-createAlias","meta":{"static":true}},{"name":"extend","tagname":"method","owner":"Ext.Base","id":"static-method-extend","meta":{"private":true,"static":true}},{"name":"getName","tagname":"method","owner":"Ext.Base","id":"static-method-getName","meta":{"static":true}},{"name":"implement","tagname":"method","owner":"Ext.Base","id":"static-method-implement","meta":{"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n","version":"4.1"},"static":true}},{"name":"mixin","tagname":"method","owner":"Ext.Base","id":"static-method-mixin","meta":{"private":true,"static":true}},{"name":"onExtended","tagname":"method","owner":"Ext.Base","id":"static-method-onExtended","meta":{"chainable":true,"private":true,"static":true}},{"name":"override","tagname":"method","owner":"Ext.Base","id":"static-method-override","meta":{"chainable":true,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n","version":"4.1.0"},"static":true}},{"name":"triggerExtended","tagname":"method","owner":"Ext.Base","id":"static-method-triggerExtended","meta":{"private":true,"static":true}}],"code_type":"ext_define","id":"class-Ext.XTemplateCompiler","short_doc":"This class compiles the XTemplate syntax into a function object. ...","component":false,"superclasses":["Ext.Base","Ext.XTemplateParser"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Ext.Base' rel='Ext.Base' class='docClass'>Ext.Base</a><div class='subclass '><a href='#!/api/Ext.XTemplateParser' rel='Ext.XTemplateParser' class='docClass'>Ext.XTemplateParser</a><div class='subclass '><strong>Ext.XTemplateCompiler</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler' target='_blank'>XTemplateCompiler.js</a></div></pre><div class='doc-contents'><div class='rounded-box private-box'><p><strong>NOTE:</strong> This is a private utility class for internal use by the framework. Don't rely on its existence.</p></div><p>This class compiles the XTemplate syntax into a function object. The function is used\nlike so:</p>\n\n<pre><code> function (out, values, parent, xindex, xcount) {\n     // out is the output array to store results\n     // values, parent, xindex and xcount have their historical meaning\n }\n</code></pre>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance properties</h3><div id='property-S-className' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-property-S-className' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-S-className' class='name expandable'>$className</a> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>'Ext.Base'</code></p></div></div></div><div id='property-actionsRe' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.XTemplateParser' rel='Ext.XTemplateParser' class='defined-in docClass'>Ext.XTemplateParser</a><br/><a href='source/XTemplateParser.html#Ext-XTemplateParser-property-actionsRe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateParser-property-actionsRe' class='name expandable'>actionsRe</a> : <a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>/\\s*(elif|elseif|if|for|foreach|exec|switch|case|eval|between)\\s*\\=\\s*(?:(?:&quot;([^&quot;]*)&quot;)|(?:'([^']*)'))\\s*/g</code></p></div></div></div><div id='property-aposRe' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-property-aposRe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-property-aposRe' class='name expandable'>aposRe</a> : <a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>/[']/g</code></p></div></div></div><div id='property-configMap' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-property-configMap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-configMap' class='name expandable'>configMap</a> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>{}</code></p></div></div></div><div id='property-createArrayTest' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-property-createArrayTest' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-property-createArrayTest' class='name expandable'>createArrayTest</a> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div><div id='property-defaultRe' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.XTemplateParser' rel='Ext.XTemplateParser' class='defined-in docClass'>Ext.XTemplateParser</a><br/><a href='source/XTemplateParser.html#Ext-XTemplateParser-property-defaultRe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateParser-property-defaultRe' class='name expandable'>defaultRe</a> : <a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>/^\\s*default\\s*$/</code></p></div></div></div><div id='property-elseRe' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.XTemplateParser' rel='Ext.XTemplateParser' class='defined-in docClass'>Ext.XTemplateParser</a><br/><a href='source/XTemplateParser.html#Ext-XTemplateParser-property-elseRe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateParser-property-elseRe' class='name expandable'>elseRe</a> : <a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>/^\\s*else\\s*$/</code></p></div></div></div><div id='property-initConfigList' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-property-initConfigList' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-initConfigList' class='name expandable'>initConfigList</a> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='property-initConfigMap' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-property-initConfigMap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-initConfigMap' class='name expandable'>initConfigMap</a> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>{}</code></p></div></div></div><div id='property-intRe' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-property-intRe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-property-intRe' class='name expandable'>intRe</a> : <a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>/^\\s*(\\d+)\\s*$/</code></p></div></div></div><div id='property-isInstance' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-property-isInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-isInstance' class='name expandable'>isInstance</a> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-level' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.XTemplateParser' rel='Ext.XTemplateParser' class='defined-in docClass'>Ext.XTemplateParser</a><br/><a href='source/XTemplateParser.html#Ext-XTemplateParser-property-level' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateParser-property-level' class='name expandable'>level</a> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><span class=\"signature\"></span></div><div class='description'><div class='short'>The 'for' or 'foreach' loop context level. ...</div><div class='long'><p>The 'for' or 'foreach' loop context level. This is adjusted\nup by one prior to calling <a href=\"#!/api/Ext.XTemplateParser-method-doFor\" rel=\"Ext.XTemplateParser-method-doFor\" class=\"docClass\">doFor</a> or <a href=\"#!/api/Ext.XTemplateParser-method-doForEach\" rel=\"Ext.XTemplateParser-method-doForEach\" class=\"docClass\">doForEach</a> and down by one after\ncalling the corresponding <a href=\"#!/api/Ext.XTemplateParser-method-doEnd\" rel=\"Ext.XTemplateParser-method-doEnd\" class=\"docClass\">doEnd</a> that closes the loop. This will be 1 on the\nfirst <a href=\"#!/api/Ext.XTemplateParser-method-doFor\" rel=\"Ext.XTemplateParser-method-doFor\" class=\"docClass\">doFor</a> or <a href=\"#!/api/Ext.XTemplateParser-method-doForEach\" rel=\"Ext.XTemplateParser-method-doForEach\" class=\"docClass\">doForEach</a> call.</p>\n</div></div></div><div id='property-newLineRe' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-property-newLineRe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-property-newLineRe' class='name expandable'>newLineRe</a> : <a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>/\\r\\n|\\r|\\n/g</code></p></div></div></div><div id='property-propNameRe' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-property-propNameRe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-property-propNameRe' class='name expandable'>propNameRe</a> : <a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>/^[\\w\\d\\$]*$/</code></p></div></div></div><div id='property-propRe' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.XTemplateParser' rel='Ext.XTemplateParser' class='defined-in docClass'>Ext.XTemplateParser</a><br/><a href='source/XTemplateParser.html#Ext-XTemplateParser-property-propRe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateParser-property-propRe' class='name expandable'>propRe</a> : <a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>/prop=(?:(?:&quot;([^&quot;]*)&quot;)|(?:'([^']*)'))/</code></p></div></div></div><div id='property-self' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-property-self' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-self' class='name expandable'>self</a> : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a><span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Get the reference to the current class from which this object was instantiated. ...</div><div class='long'><p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n</div></div></div><div id='property-tagRe' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-property-tagRe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-property-tagRe' class='name expandable'>tagRe</a> : <a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>/^([\\w-\\.\\#\\$]+)(?:\\:([\\w\\.]*)(?:\\((.*?)?\\))?)?(\\s?[\\+\\-\\*\\/]\\s?[\\d\\.\\+\\-\\*\\/\\(\\)]+)?$/</code></p></div></div></div><div id='property-topRe' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.XTemplateParser' rel='Ext.XTemplateParser' class='defined-in docClass'>Ext.XTemplateParser</a><br/><a href='source/XTemplateParser.html#Ext-XTemplateParser-property-topRe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateParser-property-topRe' class='name expandable'>topRe</a> : <a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Internal regexes ...</div><div class='long'><p>Internal regexes</p>\n<p>Defaults to: <code>/(?:(\\{\\%)|(\\{\\[)|\\{([^{}]+)\\})|(?:&lt;tpl([^&gt;]*)\\&gt;)|(?:&lt;\\/tpl&gt;)/g</code></p></div></div></div><div id='property-useEval' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-property-useEval' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-property-useEval' class='name expandable'>useEval</a> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Chrome really likes \"new Function\" to realize the code block (as in it is\n2x-3x faster to call it than using eval), b...</div><div class='long'><p>Chrome really likes \"new Function\" to realize the code block (as in it is\n2x-3x faster to call it than using eval), but Firefox chokes on it badly.\nIE and Opera are also fine with the \"new Function\" technique.</p>\n</div></div></div><div id='property-useFormat' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-property-useFormat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-property-useFormat' class='name expandable'>useFormat</a> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-useIndex' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-property-useIndex' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-property-useIndex' class='name expandable'>useIndex</a> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>See http://jsperf.com/nige-array-append for quickest way to append to an array of unknown length\n(Due to arbitrary co...</div><div class='long'><p>See http://jsperf.com/nige-array-append for quickest way to append to an array of unknown length\n(Due to arbitrary code execution inside a template, we cannot easily track the length in  var)\nOn IE6 to 8, myArray[myArray.length]='foo' is better. On other browsers myArray.push('foo') is better.</p>\n</div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static properties</h3><div id='static-property-S-onExtended' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-property-S-onExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-property-S-onExtended' class='name expandable'>$onExtended</a> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>[]</code></p></div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance methods</h3><div id='method-constructor' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.XTemplateParser' rel='Ext.XTemplateParser' class='defined-in docClass'>Ext.XTemplateParser</a><br/><a href='source/XTemplateParser.html#Ext-XTemplateParser-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Ext.XTemplateParser-method-constructor' class='name expandable'>Ext.XTemplateCompiler</a>( <span class='pre'>config</span> ) : <a href=\"#!/api/Ext.XTemplateParser\" rel=\"Ext.XTemplateParser\" class=\"docClass\">Ext.XTemplateParser</a><span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.XTemplateParser\" rel=\"Ext.XTemplateParser\" class=\"docClass\">Ext.XTemplateParser</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-addFn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-method-addFn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-method-addFn' class='name expandable'>addFn</a>( <span class='pre'>body</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Internal ...</div><div class='long'><hr />\n\n<p> Internal</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>body</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul></div></div></div><div id='method-callOverridden' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-callOverridden' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callOverridden' class='name expandable'>callOverridden</a>( <span class='pre'>args</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"><span class='deprecated' >deprecated</span><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...</div><div class='long'><p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprected</strong> </p>\n        <p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>Returns the result of calling the overridden method</p>\n</div></li></ul></div></div></div><div id='method-callParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-callParent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callParent' class='name expandable'>callParent</a>( <span class='pre'>args</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Call the \"parent\" method of the current method. ...</div><div class='long'><p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>Returns the result of calling the parent method</p>\n</div></li></ul></div></div></div><div id='method-callSuper' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-callSuper' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callSuper' class='name expandable'>callSuper</a>( <span class='pre'>args</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>This method is used by an override to call the superclass method but bypass any\noverridden method. ...</div><div class='long'><p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>Returns the result of calling the superclass method</p>\n</div></li></ul></div></div></div><div id='method-compile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-method-compile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-method-compile' class='name expandable'>compile</a>( <span class='pre'>tpl</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>tpl</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul></div></div></div><div id='method-configClass' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-configClass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-configClass' class='name expandable'>configClass</a>( <span class='pre'></span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-destroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-destroy' class='name expandable'>destroy</a>( <span class='pre'></span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/Ext.util.ElementContainer-method-destroy\" rel=\"Ext.util.ElementContainer-method-destroy\" class=\"docClass\">Ext.util.ElementContainer.destroy</a>, <a href=\"#!/api/Ext.AbstractComponent-method-destroy\" rel=\"Ext.AbstractComponent-method-destroy\" class=\"docClass\">Ext.AbstractComponent.destroy</a>, <a href=\"#!/api/Ext.AbstractPlugin-method-destroy\" rel=\"Ext.AbstractPlugin-method-destroy\" class=\"docClass\">Ext.AbstractPlugin.destroy</a></p></div></div></div><div id='method-doCase' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-method-doCase' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-method-doCase' class='name expandable'>doCase</a>( <span class='pre'>action</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is called to process &lt;tpl case=\"action\"&gt;. ...</div><div class='long'><p>This method is called to process <code>&lt;tpl case=\"action\"&gt;</code>. If there are other attributes,\nthese are passed in the actions object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>action</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul><p>Overrides: <a href=\"#!/api/Ext.XTemplateParser-method-doCase\" rel=\"Ext.XTemplateParser-method-doCase\" class=\"docClass\">Ext.XTemplateParser.doCase</a></p></div></div></div><div id='method-doDefault' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-method-doDefault' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-method-doDefault' class='name expandable'>doDefault</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is called to process &lt;tpl default&gt;. ...</div><div class='long'><p>This method is called to process <code>&lt;tpl default&gt;</code>.</p>\n<p>Overrides: <a href=\"#!/api/Ext.XTemplateParser-method-doDefault\" rel=\"Ext.XTemplateParser-method-doDefault\" class=\"docClass\">Ext.XTemplateParser.doDefault</a></p></div></div></div><div id='method-doElse' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-method-doElse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-method-doElse' class='name expandable'>doElse</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is called to process &lt;tpl else&gt;. ...</div><div class='long'><p>This method is called to process <code>&lt;tpl else&gt;</code>.</p>\n<p>Overrides: <a href=\"#!/api/Ext.XTemplateParser-method-doElse\" rel=\"Ext.XTemplateParser-method-doElse\" class=\"docClass\">Ext.XTemplateParser.doElse</a></p></div></div></div><div id='method-doElseIf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-method-doElseIf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-method-doElseIf' class='name expandable'>doElseIf</a>( <span class='pre'>action, actions</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is called to process &lt;tpl elseif=\"action\"&gt;. ...</div><div class='long'><p>This method is called to process <code>&lt;tpl elseif=\"action\"&gt;</code>. If there are other attributes,\nthese are passed in the actions object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>action</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li><li><span class='pre'>actions</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul><p>Overrides: <a href=\"#!/api/Ext.XTemplateParser-method-doElseIf\" rel=\"Ext.XTemplateParser-method-doElseIf\" class=\"docClass\">Ext.XTemplateParser.doElseIf</a></p></div></div></div><div id='method-doEnd' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-method-doEnd' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-method-doEnd' class='name expandable'>doEnd</a>( <span class='pre'>type, actions</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is called to process &lt;/tpl&gt;. ...</div><div class='long'><p>This method is called to process <code>&lt;/tpl&gt;</code>. It is given the action type that started\nthe tpl and the set of additional actions.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li><li><span class='pre'>actions</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul><p>Overrides: <a href=\"#!/api/Ext.XTemplateParser-method-doEnd\" rel=\"Ext.XTemplateParser-method-doEnd\" class=\"docClass\">Ext.XTemplateParser.doEnd</a></p></div></div></div><div id='method-doEval' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-method-doEval' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-method-doEval' class='name expandable'>doEval</a>( <span class='pre'>text</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is called to process {% text %}. ...</div><div class='long'><p>This method is called to process <code>{% text %}</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul><p>Overrides: <a href=\"#!/api/Ext.XTemplateParser-method-doEval\" rel=\"Ext.XTemplateParser-method-doEval\" class=\"docClass\">Ext.XTemplateParser.doEval</a></p></div></div></div><div id='method-doExec' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-method-doExec' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-method-doExec' class='name expandable'>doExec</a>( <span class='pre'>action, actions</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is called to process &lt;tpl exec=\"action\"&gt;. ...</div><div class='long'><p>This method is called to process <code>&lt;tpl exec=\"action\"&gt;</code>. If there are other attributes,\nthese are passed in the actions object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>action</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li><li><span class='pre'>actions</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul><p>Overrides: <a href=\"#!/api/Ext.XTemplateParser-method-doExec\" rel=\"Ext.XTemplateParser-method-doExec\" class=\"docClass\">Ext.XTemplateParser.doExec</a></p></div></div></div><div id='method-doExpr' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-method-doExpr' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-method-doExpr' class='name expandable'>doExpr</a>( <span class='pre'>expr</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is called to process expressions (like {[expr]}). ...</div><div class='long'><p>This method is called to process expressions (like <code>{[expr]}</code>).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>expr</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul><p>Overrides: <a href=\"#!/api/Ext.XTemplateParser-method-doExpr\" rel=\"Ext.XTemplateParser-method-doExpr\" class=\"docClass\">Ext.XTemplateParser.doExpr</a></p></div></div></div><div id='method-doFor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-method-doFor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-method-doFor' class='name expandable'>doFor</a>( <span class='pre'>action, actions</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is called to process &lt;tpl for=\"action\"&gt;. ...</div><div class='long'><p>This method is called to process <code>&lt;tpl for=\"action\"&gt;</code>. If there are other attributes,\nthese are passed in the actions object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>action</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li><li><span class='pre'>actions</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul><p>Overrides: <a href=\"#!/api/Ext.XTemplateParser-method-doFor\" rel=\"Ext.XTemplateParser-method-doFor\" class=\"docClass\">Ext.XTemplateParser.doFor</a></p></div></div></div><div id='method-doForEach' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-method-doForEach' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-method-doForEach' class='name expandable'>doForEach</a>( <span class='pre'>action, actions</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is called to process &lt;tpl foreach=\"action\"&gt;. ...</div><div class='long'><p>This method is called to process <code>&lt;tpl foreach=\"action\"&gt;</code>. If there are other\nattributes, these are passed in the actions object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>action</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li><li><span class='pre'>actions</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul><p>Overrides: <a href=\"#!/api/Ext.XTemplateParser-method-doForEach\" rel=\"Ext.XTemplateParser-method-doForEach\" class=\"docClass\">Ext.XTemplateParser.doForEach</a></p></div></div></div><div id='method-doIf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-method-doIf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-method-doIf' class='name expandable'>doIf</a>( <span class='pre'>action, actions</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is called to process &lt;tpl if=\"action\"&gt;. ...</div><div class='long'><p>This method is called to process <code>&lt;tpl if=\"action\"&gt;</code>. If there are other attributes,\nthese are passed in the actions object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>action</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li><li><span class='pre'>actions</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul><p>Overrides: <a href=\"#!/api/Ext.XTemplateParser-method-doIf\" rel=\"Ext.XTemplateParser-method-doIf\" class=\"docClass\">Ext.XTemplateParser.doIf</a></p></div></div></div><div id='method-doSwitch' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-method-doSwitch' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-method-doSwitch' class='name expandable'>doSwitch</a>( <span class='pre'>action</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is called to process &lt;tpl switch=\"action\"&gt;. ...</div><div class='long'><p>This method is called to process <code>&lt;tpl switch=\"action\"&gt;</code>. If there are other attributes,\nthese are passed in the actions object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>action</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul><p>Overrides: <a href=\"#!/api/Ext.XTemplateParser-method-doSwitch\" rel=\"Ext.XTemplateParser-method-doSwitch\" class=\"docClass\">Ext.XTemplateParser.doSwitch</a></p></div></div></div><div id='method-doTag' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-method-doTag' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-method-doTag' class='name expandable'>doTag</a>( <span class='pre'>tag</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is called to process simple tags (like {tag}). ...</div><div class='long'><p>This method is called to process simple tags (like <code>{tag}</code>).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>tag</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul><p>Overrides: <a href=\"#!/api/Ext.XTemplateParser-method-doTag\" rel=\"Ext.XTemplateParser-method-doTag\" class=\"docClass\">Ext.XTemplateParser.doTag</a></p></div></div></div><div id='method-doText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-method-doText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-method-doText' class='name expandable'>doText</a>( <span class='pre'>text</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>XTemplateParser callouts ...</div><div class='long'><hr />\n\n<p> XTemplateParser callouts</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul><p>Overrides: <a href=\"#!/api/Ext.XTemplateParser-method-doText\" rel=\"Ext.XTemplateParser-method-doText\" class=\"docClass\">Ext.XTemplateParser.doText</a></p></div></div></div><div id='method-doTpl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.XTemplateParser' rel='Ext.XTemplateParser' class='defined-in docClass'>Ext.XTemplateParser</a><br/><a href='source/XTemplateParser.html#Ext-XTemplateParser-method-doTpl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateParser-method-doTpl' class='name expandable'>doTpl</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is called to process an empty &lt;tpl&gt;. ...</div><div class='long'><p>This method is called to process an empty <code>&lt;tpl&gt;</code>. This is unlikely to need to be\nimplemented, so a default (do nothing) version is provided.</p>\n</div></div></div><div id='method-evalTpl' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-method-evalTpl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-method-evalTpl' class='name expandable'>evalTpl</a>( <span class='pre'>$</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>$</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul></div></div></div><div id='method-generate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-method-generate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-method-generate' class='name expandable'>generate</a>( <span class='pre'>tpl</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>tpl</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul></div></div></div><div id='method-getConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-getConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getConfig' class='name expandable'>getConfig</a>( <span class='pre'>name</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getInitialConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-getInitialConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getInitialConfig' class='name expandable'>getInitialConfig</a>( <span class='pre'>[name]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the initial configuration passed to constructor when instantiating\nthis class. ...</div><div class='long'><p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>Name of the config option to return.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed</span><div class='sub-desc'><p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n</div></li></ul></div></div></div><div id='method-hasConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-hasConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-hasConfig' class='name expandable'>hasConfig</a>( <span class='pre'>config</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-initConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-initConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-initConfig' class='name expandable'>initConfig</a>( <span class='pre'>config</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><span class=\"signature\"><span class='chainable' >chainable</span><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Initialize configuration for this class. ...</div><div class='long'><p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-onConfigUpdate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-onConfigUpdate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-onConfigUpdate' class='name expandable'>onConfigUpdate</a>( <span class='pre'>names, callback, scope</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>names</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>callback</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-parse' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.XTemplateParser' rel='Ext.XTemplateParser' class='defined-in docClass'>Ext.XTemplateParser</a><br/><a href='source/XTemplateParser.html#Ext-XTemplateParser-method-parse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateParser-method-parse' class='name expandable'>parse</a>( <span class='pre'>str</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>str</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul></div></div></div><div id='method-parseTag' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.XTemplateCompiler'>Ext.XTemplateCompiler</span><br/><a href='source/XTemplateCompiler.html#Ext-XTemplateCompiler-method-parseTag' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.XTemplateCompiler-method-parseTag' class='name expandable'>parseTag</a>( <span class='pre'>tag</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>tag</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul></div></div></div><div id='method-setConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-setConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-setConfig' class='name expandable'>setConfig</a>( <span class='pre'>config, applyIfNotSet</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><span class=\"signature\"><span class='chainable' >chainable</span><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li><li><span class='pre'>applyIfNotSet</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-statics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-method-statics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-statics' class='name expandable'>statics</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a><span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Get the reference to the class from which this object was instantiated. ...</div><div class='long'><p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-addConfig' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-addConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addConfig' class='name expandable'>addConfig</a>( <span class='pre'>config</span> )<span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-addInheritableStatics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-addInheritableStatics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addInheritableStatics' class='name expandable'>addInheritableStatics</a>( <span class='pre'>members</span> )<span class=\"signature\"><span class='chainable' >chainable</span><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-addMember' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-addMember' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addMember' class='name expandable'>addMember</a>( <span class='pre'>name, member</span> )<span class=\"signature\"><span class='chainable' >chainable</span><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>member</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-addMembers' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-addMembers' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addMembers' class='name expandable'>addMembers</a>( <span class='pre'>members</span> )<span class=\"signature\"><span class='chainable' >chainable</span><span class='static' >static</span></span></div><div class='description'><div class='short'>Add methods / properties to the prototype of this class. ...</div><div class='long'><p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-addStatics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-addStatics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addStatics' class='name expandable'>addStatics</a>( <span class='pre'>members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><span class=\"signature\"><span class='chainable' >chainable</span><span class='static' >static</span></span></div><div class='description'><div class='short'>Add / override static properties of this class. ...</div><div class='long'><p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='static-method-addXtype' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-addXtype' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addXtype' class='name expandable'>addXtype</a>( <span class='pre'>xtype</span> )<span class=\"signature\"><span class='chainable' >chainable</span><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>xtype</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul></div></div></div><div id='static-method-borrow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-borrow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-borrow' class='name expandable'>borrow</a>( <span class='pre'>fromClass, members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><span class=\"signature\"><span class='chainable' >chainable</span><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'>Borrow another class' members to the prototype of this class. ...</div><div class='long'><p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fromClass</span> : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><div class='sub-desc'><p>The class to borrow members from</p>\n</div></li><li><span class='pre'>members</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The names of the members to borrow</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='static-method-create' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-create' class='name expandable'>create</a>( <span class='pre'></span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Create a new instance of this Class. ...</div><div class='long'><p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>the created instance.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/Ext.layout.Layout-static-method-create\" rel=\"Ext.layout.Layout-static-method-create\" class=\"docClass\">Ext.layout.Layout.create</a></p></div></div></div><div id='static-method-createAlias' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-createAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-createAlias' class='name expandable'>createAlias</a>( <span class='pre'>alias, origin</span> )<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Create aliases for existing prototype methods. ...</div><div class='long'><p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alias</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n</div></li><li><span class='pre'>origin</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The original method name</p>\n</div></li></ul></div></div></div><div id='static-method-extend' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-extend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-extend' class='name expandable'>extend</a>( <span class='pre'>config</span> )<span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-getName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-getName' class='name expandable'>getName</a>( <span class='pre'></span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Get the current class' name in string format. ...</div><div class='long'><p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>className</p>\n</div></li></ul></div></div></div><div id='static-method-implement' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-implement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-implement' class='name expandable'>implement</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='static' >static</span></span></div><div class='description'><div class='short'>Adds members to class. ...</div><div class='long'><p>Adds members to class.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprected</strong> since 4.1</p>\n        <p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n\n        </div>\n</div></div></div><div id='static-method-mixin' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-mixin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-mixin' class='name expandable'>mixin</a>( <span class='pre'>name, mixinClass</span> )<span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'>Used internally by the mixins pre-processor ...</div><div class='long'><p>Used internally by the mixins pre-processor</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li><li><span class='pre'>mixinClass</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul></div></div></div><div id='static-method-onExtended' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-onExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-onExtended' class='name expandable'>onExtended</a>( <span class='pre'>fn, scope</span> )<span class=\"signature\"><span class='chainable' >chainable</span><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'></div></li></ul></div></div></div><div id='static-method-override' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-override' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-override' class='name expandable'>override</a>( <span class='pre'>members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><span class=\"signature\"><span class='chainable' >chainable</span><span class='deprecated' >deprecated</span><span class='static' >static</span></span></div><div class='description'><div class='short'>Override members of this class. ...</div><div class='long'><p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprected</strong> since 4.1.0</p>\n        <p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this class</p>\n</div></li></ul></div></div></div><div id='static-method-triggerExtended' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base2.html#Ext-Base-static-method-triggerExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-triggerExtended' class='name expandable'>triggerExtended</a>( <span class='pre'></span> )<span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{"private":true}});